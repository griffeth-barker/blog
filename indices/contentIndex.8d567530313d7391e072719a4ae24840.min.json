{"/":{"title":"blog.griff.systems","content":"\n# üèÜ Achievement Get! \nYou've found my blog ! This site is a small side project of mine. I take a lot of notes throughout the course of my work in IT. I've forgotten more than I'll ever learn and I try to remedy that by taking detailed notes and writing them out into reproduceable guides and documentation. The more polished of those notes will be published here in the hopes that they might assist another systems administrator or IT professional headed down the same path or in search of the same answers. \n\nThe occasional non-technical post may find it's way here as well, since I love all things organization, and recently dipped my toes into the Fediverse (or \"federated social universe\"), which is comprised of a lot of tech concepts I find interesting, but aren't directly related to IT.\n\n# üåä Dive right in, the blog posts are warm!\nYou can browse the blog by visiting the [Table of Contents](toc_by_year.md). You can return to this page at any time by clicking the site title at the top of the page.\n\n# üôã‚Äç‚ôÇÔ∏è About the Author\nHi, my name is Griff üëã and I am an IT Systems Administrator, husband, and lover of technology, bard/card/dice/video games, analog photography, racquetball, and all things organization and automation.\n\n\u003e[!faq]  About this Site  \n\u003e  \n\u003eThis blog is hosted via [GitHub Pages](https://pages.github.com/), using the [Hugo SSG](https://gohugo.io/) (static-site generator); this is packaged nicely by Jacky Zhao's [Quartz](https://quartz.jzhao.xyz/). The site content is written in [Markdown](https://www.markdownguide.org/)and managed in [Obsidian](https://obsidian.md/), which is my preferred knowledge management/notetaking application.\n\u003e  \n\u003eBeing able to write in Markdown makes things much simpler for me, and since I already write Markdown in Obsidian and had a GitHub account with a couple of other repositories that I push notes to, it just seemed natural to bring those things together for this blog. I was very lucky to stumble onto the Quartz project which made it pretty simple to get going. \n\u003e  \n\u003eObsidian offers community plugins, one of which is \"Obsidian Git\" which enables me to commit and push articles to the blog as I please. This setup works really nicely!\n\n---\nCheck these other great sites from people far more experienced than myself!\n- [All the Systems](http://allthesystems.com/)\n- [Prajwal Desai](https://www.prajwaldesai.com/)\n- [Anoop Nair](https://www.anoopcnair.com/)\n- [Systems Center Dudes](https://www.systemcenterdudes.com/blog/)\n- [Adam the Automator](https://adamtheautomator.com/tutorials/)\n\n\n","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":[]},"/Untitled":{"title":"Untitled","content":"","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":[]},"/published/2020/keeping_software_up_to_date_using_chocolatey":{"title":"Keeping software up to date using Chocolatey","content":"\n# Introduction\n\nDon't you love those pop-ups you get in the corner of your desktop telling you there's an update for a program installed on your computer? Or how about when you open a program and it tells you there's an update? You just want to use your software, so if you're like me, you've probably clicked \"ignore\" or closed the update to just get to what you were doing. But there is a better way! Nobody wants to take the time to keep all of their software up-to-date. In this brief blog post, I take a look at how you can make this happen \"auto-magically,\" at least for many common programs.\n\n# Installing Chocolatey package manager\n\n![](https://audiomgtmoregame.files.wordpress.com/2020/12/chocolatey-logo.png?w=1024)\n\nThe first thing we will need to do is install the Chocolatey package manager. This is going to let us have access to one central source for the programs and their updates.\n\nTo install Chocolatey, open Windows PowerShell by going to the Start Menu and typing `powershell` . Right-click the top result, and click \"Run as Administrator.\" This will require you to have administrative rights. If you do not have administrative rights, this process will not be possible.\n\nIn the Windows PowerShell window that appears, paste the following command:\n```PowerShell\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))\n```\n\nOnce that command has completed, close Windows PowerShell and launch it again with administrative rights like we just did.\n\n# Installing packages\n\nNow we need to install the packages that we want to keep up-to-date. To find out if a program you have has a package available, use the below example in PowerShell:\n\nchoco search _programname_\n\nwhere¬†_programname_¬†is the name of the program you want. Some examples might be:\n\n- adobereader\n- adobe-connect\n- googlechrome\n- microsoft-edge\n- discord\n- putty\n- icue\n- bitwarden\n- lastpass\n- obs-studio\n- conemu\n- forticlientvpn\n- openvpn\n- java\n- jre\n- logitech-options\n- reflect-free\n- and many, many more.\n\nTo actually install any or a combination of these, use the following command:\n```PowerShell\nchoco install programname -y\n```\n\nwhere¬†`programname`¬†is the package name. You can list multiple package names in succession to install multiple programs at once:\n\n```PowerShell\nchoco install programname1 programname2 programname3 -y\n```\n\nChocolatey will download the packages and install them.\n\n# Writing the update script\n\nWith the packages installed, now we need to create a super simple script that will update those packages.\n\nOpen Notepad by going to the Start Menu and typing \"notepad\" (quotations omitted) and running the top result.\n\nIn the blank document that opens, type the following:\n```PowerShell\nchoco upgrade all -Y\n```\n\nIf you continually run into errors with certain packages updating and don't mind the insecurity of it, you can also use:\n\nchoco upgrade all -Y --ignore-checksums\n\n\u003e[!warning] Warning\n\u003eThis is not necessarily a security best practice. You should proceed with caution and as appropriate to your environment.\n\nNow save this by going to File \u003e Save As... In the Save As window, change the drop-down menu for the file type. It will be defaulted to .txt and we want to change it to All Files. Type a name for the file ending with .ps1. Example:\n\nchocolatey-updater.ps1\n\nSave it to a location where it won't be touched and will always be available. I have mine saved to a folder I created at C:\\ScheduledTasks but you can put yours wherever you want.\n\n## Scheduling automatic updates\n\nFinally, now that we have installed packages and created a script to update them, we will want to schedule the update process to be completely automatic. Because being hands-off is the whole point!\n\nOpen the Task Scheduler by clicking the Start Menu and typing \"task scheduler\" then running the top result.\n\nIn the resulting Task Scheduler window, open the Action menu, then click Create Task.\n\n![](https://audiomgtmoregame.files.wordpress.com/2020/12/screenshot-2020-12-15-135956.jpg?w=532)\n\nGive your scheduled task a name and a description, then select \"Run whether user is logged in or not\" and check \"Run with highest privileges.\" Finally, Configure for: Windows 10.\n\nMove to the Triggers tab.\n\n![](https://audiomgtmoregame.files.wordpress.com/2020/12/image-3.png?w=976)\n\nAdd a new trigger to begin the task on a schedule. Input your desired start date, reoccurence period, and ensure \"Enabled\" is checked, then click OK.\n\nMove to the Actions tab.\n\n![](https://audiomgtmoregame.files.wordpress.com/2020/12/image-4.png?w=972)\n\nMake the action \"Start a program\" and in the Program/script field, paste the path to PowerShell:\n\n%SystemRoot%\\system32\\WindowsPowerShell\\v1.0\\powershell.exe\n\nIn the Add arguments field, add the following:\n\n-file scriptpath\n\nwhere scriptpath is the path to where you saved your script earlier. My example looked like this:\n\n-file C:\\ScheduledTasks\\chocolatey-updates.ps1\n\nWhen done, click OK on all remaining Task Scheduler windows and the task will be scheduled. Now, as long as your computer is on, you leave the task scheduled, and the script is available where you saved it, your computer should automatically update your specified programs without you having to do anything at all.\n\nI have been keeping my computers up to date like this for several years (set to automatically update everything weekly) and it saves me tons of time, and I rarely get notifications about new versions or annoying popups anymore.\n\n## Bringing it all together\n\nIn this process, we installed Chocolately package manager, figured out what programs we wanted to keep up to date that were available through Chocolatey, installed those programs, wrote the update script/command, and scheduled PowerShell to run that command at a regular interval.\n\nHow did this go for you? Got any other neat tips and tricks for keeping your system running in great shape? I'd love for you to share them in the comments.","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["windows","software","patching","chocolatey"]},"/published/2020/powershell_remove_net_printer_for_all_users":{"title":"Use PowerShell to remove a network printer for all users","content":"\n# Purpose\nThis brief article details the commands necessary to use PowerShell to remove a network printer for all users of a computer.\n\n# Prerequisites\nThe below actions require the executing user to be an administrator of the remote workstation, or a Domain Administrator.\n\n# Solution\n## Establish a Remote PowerShell session\nIn an elevated PowerShell session (running as administrator), run the following command;\n```PowerShell\nEnter-PsSession -ComputerName HOSTNAME.FQDN\n```\nwhere¬†`HOSTNAME.FQDN`¬†is the fully-qualified domain name of the workstation in question.\n\n_Example:_¬†`desktop01.yourdomain.com`  \n\nYou¬†_can_¬†actually perform these commands without using the FQDN, and using the short name instead.\n\n## Remove the network printer for all users\nOnce you‚Äôve entered the remote PowerShell session successfully, run the following commands in sequence;\n```PowerShell\nGet-WmiObject -Class Win32_Printer | Where-Object {$_.Name -eq ‚Äò\\\\PRINTSERVER\\Shared-printer‚Äò}\n```\nwhere¬†`PRINTSERVER`¬†is the NETBIOS name of your print server from which the printer is shared and¬†`Shared-printer`¬†is the shared name of the printer you‚Äôd like to remove. This command will return the printer that you‚Äôd like to remove, if it is installed for the user running the command. Even if the user running the command does not have this printer installed, this process will still work as intended.\n```PowerShell\nGet-WmiObject -Class Win32_Printer | Where-Object {$_.Name -eq ‚Äò\\\\PRINTSERVER\\Shared-printer‚Äò}| foreach {$_.delete()}\n```\nagain, where¬†`PRINTSERVER`¬†is the NETBIOS name of your print server from which the printer is shared and¬†`Shared-printer`¬†is the shared name of the printer you‚Äôd like to remove.\n\nWhen this is complete, the network printer should be uninstalled/removed for all users on that workstation. This can be verified by having users logon and check their Devices and Printers window.","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["powershell","windows","printers"]},"/published/2020/powershell_setup_net_printer_for_all_users":{"title":"powershell_setup_net_printer_for_all_users","content":"\n# Purpose\n\nThis brief article details the commands necessary to use PowerShell to add/install/map a network printer for all users of a computer.\n\n# Prerequisites\n\nThe below actions require the executing user to have administrative rights to the workstation in question.\n\n# Solution\n\n## Establish a Remote PowerShell session\n\nIn an elevated PowerShell session (running as administrator), run the following command;\n```PowerShell\nEnter-PsSession -ComputerName HOSTNAME.FQDN\n```\nwhere¬†`HOSTNAME.FQDN`¬†is the fully-qualified domain name of the workstation in question.\n\n_Example:_¬†desktop01.yourdomain.com\n\nYou¬†_can_¬†actually execute this process using the short name of the computer instead of the FQDN.\n\n## Add the network printer for all users\n\nOnce you‚Äôve entered the remote PowerShell session successfully, run the following commands in sequence;\n\n```cmd\nRUNDLL32 PRINTUI.DLL,PrintUIEntry /ga /n\\\\PRINTSERVER\\Shared-printer\n```\n\nwhere¬†`PRINTSERVER`¬†is the NETBIOS name of your print server from which the printer is shared and¬†`Shared-printer`¬†is the shared name of the printer you‚Äôd like to add/install/map.\n\nWhen this is complete, the network printer should be added and available for all users on that workstation. This can be verified by having users logon and check their Devices and Printers window.\n\n---\n# Additional Reading\n- [Microsoft: rundll32 printui.dll,PrintUIEntry](https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/rundll32-printui)\n","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["powershell","windows","printers"]},"/published/2020/review_samsung_galaxy_tab_s6":{"title":"Review: Samsung Galaxy Tab S6","content":"\n\u003e[!info] August 2020 Update\n\u003e\n_I had to come back to update this post after having used the Samsung Galaxy Tab S6 for a longer period of time, as well as having traveled with it._\n\u003e\n*In the original post, I spent a fair amount of time griping about the terrible pen magnet/storage on the rear of the device. I'm sorry to say, but I am going to spend a moment griping about it again. Over the last several months, I have been¬†constantly¬†frustrated with the pen not attaching without careful placement, the pen falling off the magnet, and my inevitable loss of the pen since it fell off the magnet somewhere. Sure, you can get a case that secures the pen--but this should not be necessary. By design, the pen should be easy to keep track of, use, and stow. This has become a major downside to the device, for me at least. But onto more positive things.*\n\u003e\n_One of my primary questions was whether I could use the tablet as a replacement for my laptop when traveling. The short answer is:¬†**absolutely**! I spent the week of my recent vacation reading books, browsing the web, writing for this blog, editing a couple of casual photos, playing games, doing email, and a couple of other tasks, including troubleshooting some stuff with my parents' home network. I had brought my laptop--just in case--and found that I didn't pull it out even once. The Tab S6 was all I needed! Now, a qualification is necessary here. I did bring my Logitech MX Master 3 bluetooth mouse and my Keychron K6 bluetooth mechanical keyboard for when I was writing my blog posts, but otherwise, the tablet by itself was just fine._\n\u003e\n_So, my verdict after such extended use and travel with the Tab S6, is that I highly recommend it, but do note that some kind of case or other solution to keep track of the pen will be absolutely necessary._\n\nReleased in August of 2019, the Samsung Galaxy Tab S6 becomes the new Samsung standard for tablets, in place of the Tab 4 and Tab 5Se. I¬† picked up the Tab S6 on an open-box deal from Best Buy (not sponsored). I have previously owned an iPad Mini years back, as well as the Microsoft Surface Pro 3, though I no longer have either. The itch for a tablet was strong, and this time around, Samsung won the vote. But why? Let's take a look at some of the selling points.\n\n# Price\n\nThe Tab S6, without the open-box deal I got, currently retails for roughly $650.00 USD for the base model at the time of writing. However, if you keep an eye out, you can snag an open-box deal on one for about 200.00 USD less! And at that price point, this tablet really packs a punch. Why?\n\n# Specifications\n\nBecause 650.00 USD (or 450.00 USD in my case) gets you a 10.5 inch screen, 128 GB of solid state storage, 6 GB of RAM, and a snappy octa-core processor. The base price even includes the tablet's pen like with the Microsoft Surface, which other tablet manufacturers either don't have (looking at you, Kindle) or require you to purchase separately (Apple).\n\n# UX\n\nObviously the user experience is a big deal, since I'm going to be the¬†_user experiencing_¬†the tablet. I was looking for a true tablet experience for while I am away from my custom desktop computer. I'm big on customization and versatility. I have a Samsung Galaxy Note 10+ running Android and enjoy it very much. The Google Play store has a huge variety of apps available, including the Microsoft Office suite, Wordpress, as well as apps for social media, photography, games and other entertainment, as well as utilities that can be useful for an on-the-go IT professional such as myself. Additionally, while I like the Samsung flavor of the graphical user interface, Android allows me to overlay my own preferred launchers should I so desire--and without having to root or jailbreak my device to do so. I am currently using the Microsoft Launcher.\n\nSo thus far I've mentioned a few things that I really like about the device. But what cons are worth mentioning?\n\n# Downfalls\n\nLet's start with the pen. It is made of a plastic, which feels a bit light and cheap--though I suppose I didn't expect too much for an included accessory. It pales in comparison to the pen that comes with the Microsoft Surface, and is also not as good as the Apple Pencil.\n\nDespite being too light for my taste, and a bit cheap-feeling, my biggest gripe comes to storage of the pen. There is a shallow groove on the rear of the device beneath the camera lens. This groove has two magnetic points that hold the pen in place--uh, sometimes. The pen falls off the groove or gets knocked out of place easily, and the groove is difficult to find without looking at the rear of the device. I've lost my pen quite a few times in the last two weeks. To further my compaint, snapping the pen to the rear of the device means that the device can no longer rest flat on a surface such as a table, desk, and also restricts the use of some wall mounts. It also happens to be right where I prefer to hold the device while on the go, which is a bit inconvenient. None of these things will necessarily be a downfall for you, but they were for me. After extensive use, I've found that it is actually quite difficult to attached the pen to it's groove without looking directly at it, and that the pen falls off quite easily, which has become annoying.\n\nFurther, the pen has less functionality than I would like. The S Gestures that you can do to interact with the OS are convenient and nice. Unfortunately, that is where the interaction runs out. The pen can be used as a replacement for your finger in other apps, but the button will continue to function in relation to the OS, not the app, thus prohibiting a large amount of usefulness. One thing I want to be able to do is hold the pen, lean back, and flick it up and down to scroll up and down a webpage or other app, but alas, this functionality seems to be missing.\n\n# Final Thoughts\n\nReally, the pen was the only complaint I had with the purchase--and though I have things I wish Samsung had done better, the pen is still functional and is not uncomfortable to hold for short amounts of time. The pen might be a dealbreaker for you, or you might never touch it? So what am I doing with the device?\n\nIn the weeks that I've had the Galaxy Tab 6S, I have used it to import photos from my Canon DSLR (no additional software required), edit RAW image files in Google's Snapseed photo editing application--which is shockingly good for being free, browse Reddit, the internet, access banking information, VPN into my home network, VPN into my work network, remote access and administer both workstations and servers, and listened to plenty of music and watched videos on YouTube.\n\nI have had zero issues accomplishing what I need to. In fact, just earlier this evening my wife and I were at dinner and I had the tablet with me. I got a call from work with an emergency. I wouldn't have lugged a laptop with me, but I happened to habe the tablet. Within a minute or so, I was VPN'ed into our company's network, accessed a server, and did what I needed to do to assist an employee.\n\nSimilarly, the other night I had the opportunity to pick up my camera and create some images of my wife. I didn't want to wait to import the photos on my desktop and process them there, so I plugged my camera into my tablet, imported the photos, and processed them, in Snapseed. Within 10 minutes I had a couple of fantastic images to share.\n\nI've found that overall the tablet has conformed to my needs and flexed to every situation I've found myself in thus far. It has been a good buy. Would I buy it again? Most likely! Given that I like to use the pen and the pen is quite subpar, I likely would not pay full price for one, but I would willingly pay open-box or used pricing again. If you're looking for a powerful daily driver of a tablet, then this might just be the ticket for you!","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["hardware","review"]},"/published/2021/fix_mapped_drives_not_showing_in_dialogues":{"title":"Fix mapped drives not showing in Open and Save dialogues in Windows","content":"\n# Problem\nUser‚Äôs mapped drives do not show up as mapped in application Open/Save prompts, even though they show correctly in¬†**File Explorer \u003e This PC**.\n\n# Environment\nThis issue affects Windows 10 workstations joined to a domain where the user has one or more drives that are automatically mapped via Group Policy Object or NETLOGON script.\n\n# Cause\nThis problem occurs because UAC treats members of the Administrators group as standard users. Therefore, network shares that are mapped by logon scripts are shared with the standard user access token instead of with the full administrator access token.\n\n# Solution\n\u003e[!warning] Caution\nIncorrect use of the Windows registry editor may prevent the operating system from functioning properly. Great care should be taken when making changes to a Windows registry. Registry modifications should only be carried-out by persons experienced in the use of the registry editor application.\n\u003e\nIt is recommended that you follow best change management practices and always take a backup of the system registry prior to making modifications in the registry._\n\nTo configure the¬†**EnableLinkedConnections**¬†registry value, follow these steps:\n\n1. Click Start, type¬†`regedit`¬†in the Start Search box, and then press ENTER.\n2. Locate and then right-click the following registry subkey:\n\t`HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System`\n\n3. Point to New, and then click¬†**DWORD Value**.\n4. Type¬†`EnableLinkedConnections`, and then press ENTER.\n5. Right-click¬†**EnableLinkedConnections**, and then click¬†**Modify**.\n6. In the Value data box, type¬†`1`, and then click OK.\n\nExit Registry Editor, and then restart the computer.\n\n---\n\n## Additional Information\n\nhttps://community.spiceworks.com/how_to/53670-mapped-network-drives-not-showing-in-an-application\n\nhttps://channel9.msdn.com/Shows/Going+Deep/UAC-What-How-Why#c633305694960000000","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["fix","software","windows","mapped drives"]},"/published/2021/fix_please_wait_while_the_document_is_being_prepared_for_message_in_adobe_reader":{"title":"Fix 'Please wait while the document is being preared for' message in Adobe Reader","content":"\nAny business user is familiar with the odd-ball errors that Adobe Reader can throw you while working. In this quick knowledgebase article, I'll outline a quick fix I've found that works for me. As always, YMMV (your mileage may vary).\n\n# Problem\nWhen PDFs are opened in Adobe Acrobat, a popup window with the message ‚ÄúPlease wait while the document is being prepared for‚Äù appears, and takes quite a while to process before the document will display. Sometimes, the document will never actually load.\n\n![](https://audiomgtmoregame.files.wordpress.com/2020/12/image-30.png?w=613)\n\n# Environment\nMicrosoft Windows 7 or 10 devices (OS architecture agnostic) where Adobe Acrobat Reader DC MUI version 20.012.20043 or newer installed.\n\n# Cause\n\nThis message occurs when Adobe Acrobat is preparing an opened document to be interacted with via accessibility features. At the time of writing this article, it is believed that a recent update to the software has provided this feature/function as enabled by default.\n\n# Solution\n![](https://audiomgtmoregame.files.wordpress.com/2020/12/image-31.png?w=1024)\n*Screenshot of Adobe Reader DC Preferences Window \u003e Accessibility*\n\nLaunch Adobe Acrobat and in the menu bar, open the¬†**Edit**¬†menu, then select¬†**Preferences**.\n\nIn the navigation pane at the left of the resulting Preferences window, select the¬†**Accessibility**¬†option.\n\nIn the Other Accessibility Options section, uncheck the selection box for the feature entitled ‚Äú**Enable assistive technology support**,‚Äù then click¬†**OK**.\n\nThe issue should now be resolved for the next time a document is opened in Adobe Acrobat.\n\n---\n\n# Additional resources\n- [Adobe Support Community thread](https://www.blogger.com/blog/post/edit/8562458718891840214/1869982778674319275#)\n- [BruceB Consulting on other Adobe accessibility issues](https://www.blogger.com/blog/post/edit/8562458718891840214/1869982778674319275#)","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["fix","software","adobe"]},"/published/2021/install_ubiquiti_unifi_controller_on_debian_10_linux":{"title":"Install Ubiquiti UniFi controller on Debian 10 Linux","content":"\n# Prerequisites\n\nIf you‚Äôre installing on Linux, be sure you have the following ahead of time:\n\n- A current Debian or Ubuntu OS with root access ‚Äì The steps will use¬†[Debian 10](https://www.blogger.com/blog/post/edit/8562458718891840214/6386954631595199676#)\n- An account for¬†[unifi.ui.com](https://www.blogger.com/blog/post/edit/8562458718891840214/6386954631595199676#)\n\nAnd that‚Äôs it. Everything else will be handled during the install process.\n\n# Installing the Controller\n\nTo get the controller installed on Linux you have many options. Ubiquiti has some instructions on how to install the controller on their website but it only covers the install for a couple of specific versions of Linux. To use Debian, use the script that has been posted on the¬†[Unifi forums](https://www.blogger.com/blog/post/edit/8562458718891840214/6386954631595199676#)¬†by member AmazedMender16.\n\nTo start the install, first ssh into the Debian server or access the server from the console. Log in either as root or as another user that has root access and then run¬†su.\n\nMake sure your repos are up to date, then install the¬†`ca-certificates`¬†and¬†`wget`¬†packages.\n```bash\napt-get update \u0026\u0026 apt-get install ca-certificates wget -y\n```\n\nDownload and run the Unifi Controller installer script. This script will handle the install of the dependencies and controller software for many different distros of Linux including the Debian 10 server we are using.\n```bash\nwget https://get.glennr.nl/unifi/install/install_latest/unifi-latest.sh1 bash unifi-latest.sh\n```\n\nYou will be prompted for a few things while the script runs. First, it will ask if you want to keep the script downloaded after the install. In most cases this is not required, so you should enter¬†`n`¬†and then press enter.\n\n# Ensuring the Unifi controller software is up to date\n\nYou may receive a prompt to update packages during the install. Enter¬†`y`¬†and then press enter.\n\n# Confirming it‚Äôs OK to update packages\n\nFinally, you will be prompted to add the apt repo for Unifi to update the controller from¬†apt. Enter¬†`y`¬†and press enter as this will make upgrades serviceable through¬†apt.\n\nOnce the install completes, the script will output the version of the controller installed and the URL to use to start configuring the controller.\n\n# Configuring the Controller\n\nOnce you have the controller software installed on whatever server you are using the setting will be the same.\n\nGo to the web address¬†`https://\u003cServerIP\u003e:8443/`¬†and you will be presented with the controller's web portal.","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["linux","unifi","ubiquiti"]},"/published/2021/password_managers_and_why_you_should_be_using_one":{"title":"Password managers and why you should be using one","content":"\n¬†Let me ask you some questions:\n\n- Do you have that one account that you only have to log into once in a blue moon, and you pretty much always have to reset the password?\n- Do any of your accounts use the same password?\n- Do you have any of your passwords written down somewhere or typed out in a Word document or Excel spreadsheet or some other similar list?\n\nIf you answered \"yes\" to one or more of these questions, then using a password manager may benefit you.\n\n# What is a password manager?\n\nA password manager is an program that digitally and securely stores your login information for various accounts. Using just a single \"master password,\" you can access the login information for any and all of your stored accounts witout having to know every account's information.\n\n# Why use a password manager?\n\n## Security\n\nThe most important benefit of a password manager is security. If you have your passwords written down somewhere, then it is more likely someone may accidentally (or intentionally) find out how to access your accounts; additionally, if they're written down, they can be lost or destroyed. If you have more than one account using the same password, if that password is discovered or stolen, the theif could gain access to many of your accounts. Using a password manager allows you to securely store your passwords, have convenient access to them, and also lets you generate more complex and secure passwords without the need to memorize them.\n\n## Simplicity\n\nSecurity is important. But the extra-nice thing about a password maanger is the simplicity. Instead of having to remember of the logon information for many accounts, you can simply remember a single \"master password.\" Some password managers even support web browser add-ons/extensions that will auto-fill your login information into a webpage after you enter your master password.\n\n# My recommended solution\n\n![](https://audiomgtmoregame.files.wordpress.com/2020/12/bitwarden_logo_horizontal.png?w=1024)\n\n**Bitwarden**¬†is a fantastic and free option for a password manager. I have been using Bitwarden for several years and love it. The solution is open-source, free, and supported on the many platforms and browsers listed below.\n\nOperating systems:¬†[Windows](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)¬†|¬†[macOS](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)¬†|¬†[Linux](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)¬†|¬†[Android](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)¬†|¬†[iOS](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)\n\nBrowsers:¬†[Edge](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)¬†|¬†[Chrome](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)¬†|¬†[Opera](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)¬†|¬†[Firefox](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)¬†|¬†[Tor](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)¬†|¬†[Vivaldi](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)¬†|¬†[Brave](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)¬†|¬†[Safari](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)\n\nAdditionally, Bitwarden features web-based access via the¬†[web portal](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)¬†and also has powerful command-line tools (CLI) to create and execute scripts against your Bitwarden Vault.\n\n![](https://audiomgtmoregame.files.wordpress.com/2020/12/web-vault-macbook.png?w=1024)\n\nWeb portal access to your Bitwarden Vault\n\nWith Bitwarden, securing your online accounts is as simple as creating a free account, setting your master password, and entering the information you'd like to store. If you're like me and had all your login info in an Excel spreadsheet, then you're in luck, because Bitwarden supports the import of .CSV files to making your setup process breeze by quickly.\n\nOther neat stuff Bitwarden supports includes: locally hosting it on your own server instead of cloud hosted, it supports multi-factor authentication and is compatible with the Yubico YubiKey (a review on that to come), a password generator, configuration for auto-fill on websites, and the ability to store more than passwords securely--including secure notes, credit card information, and identity information. And so much more.\n\nAvailable on every major platform and cloud-accessible, Bitwarden is a fast, convenient, and free solution to enhance your online security and make your life easier.\n\n# Other Options\n\nBitwarden is fantastic, but it won't be for everyone. That's why competition exists! Here are some additional options for you to check out:\n\n- [LastPass](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)\n- [DashLane](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)\n- [1Password](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)\n- [Google Password Manager](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)\n- [KeePass](https://www.blogger.com/blog/post/edit/8562458718891840214/2826015379359740939#)\n\n# Bringing it all together\n\nRegardless of which solution you choose, a password manager is crucial to increasing your online security--unless you can just memorize every single password you have. Combining a password manager with some form of multi-factor authentication provides a high degree of security while also making life more convenient by requiring you to only remembe a single master password. If you haven't tried a password manager, don't delay! Try one today.\n\nHave you used a password manager before? If so, what was it and what were your thoughts? Have you had other issues or complaints about memorizing passwords? I'd love to hear your thoughts in the comments.","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["software","security"]},"/published/2021/revert_node_certificates_to_default_in_proxmox_ve":{"title":"Revert node certificates to default in Proxmox VE","content":"\n# Purpose\nThe purpose of this document is to explain the steps necessary to reset and regenerate the state of the node/host certificates.\n\n# Assumptions\nThis document assumes you have a properly functioning Proxmox cluster with all nodes accessible on the network/via web browser. You‚Äôre replaced or modified any of the certificate or key files generated by PVE and now need to revert to the default state.\n\n# Solution\n## Step 1 - Cleanup existing certificate files\n\nDelete or move the following files:\n```\n/etc/pve/pve-root-ca.pem\n/etc/pve/priv/pve-root-ca.key\n/etc/pve/nodes/\u003cnode\u003e/pve-ssl.pem\n/etc/pve/nodes/\u003cnode\u003e/pve-ssl.key\n```\n\n\u003e[!info] Note\n\u003eThe latter two need to be repeated for all nodes if you have a cluster.\n\n\u003e[!warning] Warning\nIf you do not repeat the latter two on each host, your issue¬†**will**¬†return.\n\n## Regenerate certificates\n\nAfterwards, run the following command on each node of the cluster to re-generate the certificates and keys:\n```bash\npvecm updatecerts -f\n```\n\n---\n\n# Additional Information\n- [Proxmox VE HTTPS Certificate Configuration](https://pve.proxmox.com/wiki/HTTPS_Certificate_Configuration_(Version_4.x,_5.0_and_5.1)#Revert_to_default_configuration)\n","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["linux","proxmox","virtualization","certificates"]},"/published/2022/fix_cluster_not_ready_no_quorum_in_proxmox":{"title":"Fix 'Cluster not ready - no quorum?' error in Proxmox VE","content":"\n# Purpose\nThis document will delineate the steps necessary to work around a situation where your Proxmox cluster will not allow you to interact with it due to lack of quorum between the hosts.\n\n# Assumptions\nThis document assumes that the nodes in the cluster are all online with proper certificates, network connectivity, and that the administrator intents to properly resolve the quorum issue following these steps.\n\nThis guide is not intended to be a permanent solution, but rather a work-around.\n\n# Cause\nThis occurs when the cluster quorum is not configured correctly --or-- when a cluster member is offline. The intended function of the cluster is to not work if the quorum does not receive the adequate number of votes from the cluster to begin. You can manually set the number of expected quorum.\n\n# Workaround\n## Step 1 - Override expected number of quorum votes\n\nYou can manually set the number of expected quorum votes by running this command:\n```bash\npvecm expected #\n```\n\nwhere # is the number of votes you wish to make the quorum use to determine if the cluster is quorate.\n\n\u003e[!warning] Warning\n\u003e Take care when manually overriding the cluster quorum, as it can have unintentional results. If a node repeatedly presents an issue, it should be removed form the cluster.\n\nFollowing use of this command, the cluster should achieve quorum and allow you to interact with it.\n\n---\n\n# Additional Information\n- [PVE cluster manager documentation](https://pve.proxmox.com/wiki/Cluster_Manager)\n- [PVE forum post on cluster quorum](https://forum.proxmox.com/threads/cluster-and-quorum.7786/)\n- [JM Technology post on cluster quorum](https://www.jm.technology/post/proxmox_quorum_april_2019/)","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["linux","proxmox","virtualization"]},"/published/2022/fix_proxmox_node_cannot_update_packages_via_apt-get":{"title":"Fix Proxmox node cannot update packages via apt-get","content":"\n# **Problem**\nA virtualization host/node running Proxmox (whether clustered or not) will fail to update packages via apt-get and produce the below error messages in the task queue:\n\n![](https://audiomgtmoregame.files.wordpress.com/2020/12/image-43.png?w=1024)\n\n# **Environment**\nProxmox Virtualization Environment (confirmed for versions 6.2 and newer) running the free/community editions without and enterprise subscription.\n\n# **Cause**\nThe cause of this issue results from not having a Proxmox Enterprise subscription/license. These errors are caused by apt-get attempting to procure updates from the subscription enterprise proxmox repository, but because the node or cluster does not have a valid enterprise subscription, the update fails and produces an error.\n\n# **Solution**\nAccess the shell for the node/virtualization host producing the error and run the following command:\n\n```bash\ncp /etc/apt/sources.list.d/pve-enterprise.list /etc/apt/sources.list.d/pve-enterprise.list.backup \u0026\u0026 echo -e \"#$(cat /etc/apt/sources.list.d/pve-enterprise.list)\" \u003e /etc/apt/sources.list.d/pve-enterprise.list\n```\n\nThis command copies the repository sources list, renames the original as a backup so the system does not use it, then comments out the line of the list for the enterprise repository.\n\nOnce this command runs successfully, you should be able to either (a) wait for the scheduled updates to try to run again or (b) manually search for and install updates using apt-get update/upgrade. Either way, no errors should be produced.\n\n---\n\n# **Additional Reading**\n- [Dannyda.com - How to fix failed to fetch 401 unauthorized task](https://dannyda.com/2020/06/19/how-to-fix-proxmox-pve6-1-26-1-7-update-failedfailed-to-fetch-401-unauthorized-task-error-command-apt-get-update-failed-exit-code-100/)","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["linux","proxmox","virtualization"]},"/published/2022/getting_organized_with_notion":{"title":"Getting organized with Notion","content":"\n\u003e[!info] Disclaimer\nThis article is written and published by a community member; I am not a member of the Notion Labs team and this content is in no way endorsed by or affiliated with their organization, nor does it reflect the views or opinions of the organization or any member thereof. Thank you for taking the time to stop by and check out a community member's content!\n\n---\n# Introduction\n\nPeople. Things. Places. Ideas. Stuff. There's so much information that we deal with on a daily basis. Not only is there an interminable amount of information, but then there's the stuff you have to¬†_do_¬†with that information ‚Äî which usually ends up generating more information, or more stuff for you to do with the new information. That explanation might sound as muddled as the actual process of managing everything going on in life.\n\nEnter: note taking and organization applications. There are a variety of apps and tools that help with managing information like notes, schedules, files, etc. These solutions range from the simplest of apps ‚Äî such as the Notes app included in iOS or the To-do app in Windows 10 ‚Äî to more robust solutions such as Microsoft's OneNote, as well as more speciality and niche solutions such as Milanote. There are tons of options, though they range in functionality and compatibility with various platforms.\n\nFor example, many people love Bear and it's Markdown-based formatting, but it is only available on iOS and macOS. Others prefer OneNote for it's wide compatibility across many platforms (even Linux distributions, if you're willing to put in a bit of work), but then struggle with many of the glitches and downfalls of Microsoft's less-than-consistent user experience and functionality.\n\nWith just as many options as the information you have to manage, there has to be one that sticks out among the others. I have a notion that there are a few. One of them is...well...Notion!\n\n# What is Notion?\n\nNotion advertises itself as the \"all-in-one\" workspace for your whole team. It provides writing, planning, and organizational utility in a way that can easily be harnessed by either individuals or entire teams and companies. The features are so robust that many organizations ranging from enterprises such as Pixar, IBM, Nike, and Slack to prominent creators and platform providers in various industries such as Spotify, Square, and even content creators such as Linus Media Group. But it's also used by many students, teachers, writers, podcasters, and many other individuals.\n\n# What can Notion do?\n\nNotion is one of those solutions where you get a lot of flexibility to make it do most whatever you'd like it to. But out of the box, there is a wide range of things that it can do to help you keep track of all your notions.\n\n- Organize just about any information you can think of\n- Central, powerful search of all your stuff\n- Realtime collaboration with other users\n- Scalable - start as small as you and grow your workspace with your needs\n- Embedded apps such as Google Docs, Figma, Twitter, Github, CodePen, Spotify, and more\n- Project and task management\n- Multi-database view\n- Focus-based notetaking\n- Drag and drop organization ‚Äî or metadata organization\n- Rich and varied content support\n- Content creation and tracking\n- New API functionality to tie in other applications and automate functions\n- And so much more...\n\n# Why should I use Notion?\n\nThe reason to use Notion can vary from person to person, however most people use it because it is an effective and easy solution to organize all kinds of information, and it's free. One of my favorite reasons to use it is that it is one of the few solutions that I have used where it really feels like it was designed by actual people, for actual people to use.\n\nBy and large, it is simple to pick up and start using right away without diving too deep in guides and having to learn. If you want to dive into more advanced stuff, you absolutely can and there is a great website, many community members' blogs, and a Discord server full of helpful people that make advanced tinkering and organization easy.\n\nWhatever your reason is, there's nothing to lose by giving Notion a shot and making a go at organizing anything and everything you could want. Get Notion for free¬†[here](https://www.blogger.com/blog/post/edit/8562458718891840214/8525660830123972495#)¬†and be sure to comment and let me know what your thoughts on Notion are, or about any other tracking/organization solutions you use!\n\nOrganization beginner or aficionado? Feel free to join the Tools for Thought Discord server¬†[here](https://www.blogger.com/blog/post/edit/8562458718891840214/8525660830123972495#)!","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["pkm","knowledge management","notetaking","software"]},"/published/2022/setup_print_server_on_windows_server_core":{"title":"Setup a print server using Widnows Server Core","content":"\n# Introduction\n\nMany administrators are always looking for ways to simplify the required management of their environments, save on overhead, resources, etc. With the advent of Windows PowerShell and it growing to be a commonplace administrator utility in Windows environments, simple systems such as print servers no longer really require a full-fledged graphical user interface. Print servers are prime candidates to be hosted on the CLI-based Windows Server Core variant of Windows Server, especially where they are so easily managed through remote PowerShell. In this brief article, we'll take a quick look at spinning up a core print server and some of the options available for administering the new server.\n\n# Spinning up your machine\n\nWhether you are using traditional hardware for your server (a rackmount server, blade server, tower server/desktop PC) or a virtualized environment, you'll first need to actually install Windows Server Core on your machine. For my environment, I spun up a virtual machine in my Proxmox virtual environment, but many may be using VMware, Hyper-V, or other solutions which will work perfectly fine.\n\n# Adding the features and roles to the server\n\nOnce you have Windows installed and your requisite network and domain configuration done, add the necessary services and features to the server:\n\n```PowerShell\nInstall-WindowsFeature Print-Services\n```\n\nThis will install the Print Services role as well as the Print Server Role Service. No further configuration is necessary as far as the services and features go. All that is left to do is add some printers!\n\n# Administering the server\n\nThere are multiple ways to administer your new Windows Core print server.\n\n### PowerShell\n\nArguably the correct way to manage a Windows Core server, is PowerShell. Like other deployments, a print server is managable through the command line with general ease. Beginning with Server 2012's Core version, there are many print management commands available to administrators.\n\nAs an example, we can configure a printer using just two commands:\n\nAdding the printer port:\n\n```PowerShell\nAdd-PrinterPort -Name \"192.168.254.5\" -PrinterHostAddress \"192.168.254.5\"\n```\n\nAdding, sharing, and publishing the printer:\n```PowerShell\nAdd-Printer -Name YourPrinter01 -DriverName \"HP Universal Print Driver PCL6\" -PortName 192.168.254.5 -Shared -ShareName \"YourPrinter01\" -Published\n```\n\n### VBS\n\nAn archaic option also exists. At¬†`C:\\Windows\\System32\\Printing_Admin_Scripts`¬†you'll find a variety of VBS scripts that can be used to administer the print server. But seriously, who is preferring VBS when we have PowerShell?\n\nAs an example, we can configure a printer using the following commands:\n\n\n```PowerShell\n# Creating the printer port:\ncscript prnport.vbs -a -r 192.168.254.5 -h 192.168.254.5 -o raw\n\n# Adding printer on a specific printer port:\ncscript prnmngr.vbs -a -p YourPrinter01 -m \"HP Universal Print Driver PCL6\" -r 192.168.254.5\n\n# Sharing the printer:\ncscript prncnfg.vbs -t -p YourPrinter01 -r 192.168.254.5 -h YourPrinter01 +shared -direct -m \"Default printer for HR\" -l \"YourDesiredLocation\"\n\n# Publishing the printer to Active Directory:\ncscript pubprn.vbs \\\\printserver\\YourPrinter01 \"LDAP://CN=YourContainer,DC=YourDomain,DC=com\"\n```\n\n\n### GUI\n\nIf you really just can't let go of using the graphical user interface just yet as you ease into command-line-based administration you can still get your hands on the GUI by executing:¬†`C:\\Windows\\System32\\printui.exe /il`\n\nAdditionally, on a remote machine, you can connect RSAT to your Windows Core print server and use the Print Management snap-in for the Microsoft Management Console to visually administer the print server.\n\nBut seriously...get comfortable with PowerShell. This is the way.\n\n# Conclusion\n\nAnd, well, that's pretty much it. There is certainly a more granular level of detail we could go into, but for the purposes of a general overview, I think that does it. Windows Core servers are quick and easy to spin up and an absolute breeze to configure if you are comfortable with PowerShell. In a lab environment, they can also be a great way to get more comfortable with PowerShell if you are just learning. Go ahead and spin up a Windows Core server in VirtualBox or your choice of virtualization bench and give it a try!\n\nWhat are you using core servers for in your environment, and how do you like it? I'd love to hear from you in the comments below.\n\n---\n\n## Additional Reading\n\n[Install Print and Document Services | Microsoft Docs](https://www.blogger.com/blog/post/edit/8562458718891840214/175097051257976925#)\n\n[Using Server Core as a Print Server - Microsoft Tech Community](https://www.blogger.com/blog/post/edit/8562458718891840214/175097051257976925#)","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["windows"]},"/published/2023/administer_windows_core_print_servers":{"title":"Administer Windows Core Print Servers","content":"\n# Administer Windows Core Print Servers\nYou RDP to a print server and where you expected to see a Windows Server desktop environment, you are presented with a black screen with nothing more than a terminal window. How are you going to administer the print server?\n\nSure, you could launch the Print Management application from another server and then remotely administer the print server from there, and that's perfectly acceptable. But PowerShell can take care of this as well!\n\nHere are some ways to complete common print server tasks using PowerShell in a Windows Core environment.\n\n## Common Print Server Tasks\n### Get a List of the Server's Printers\nNeed to see what printers are installed on the print server?\n\n```PowerShell\nGet-Printer\n```\n\n### Get a List of Print Jobs for a Specific Printer\nNeed to see what print jobs are pending for a printer on the server?\n\n```PowerShell\nGet-PrintJob -PrinterName printer01\n```\n\n### Get Printer Configuration\nNeed to check basic configurations such as if the printer is set to default to color printing, or double-sided printing (duplexing)?\n\n```PowerShell\nGet-PrintConfiguration -PrinterName printer01\n```\n\n### Get List of Installed Printer Drivers\n```PowerShell\nGet-PrinterDriver\n```\n\n### Get List of Configured Printer Ports\n```PowerShell\nGet-PrinterPort\n```\n\n### Remove a Print Job\nOnce you've gotten the print job in question using the above command and noted the ID of the print job, you can pipe that output into the `Remove-PrintJob` command:\n\n```PowerShell\nGet-PrintJob -ID 1 | Remove-PrintJob\n```\n\n### Restart the Print Spooler Service\nA common task on print servers is to bounce (restart) the Print Spooler service. This can be accomplished like so:\n\n```PowerShell\nRestart-Service -Name spooler\n```\n\n## Conclusion\nThere are many other tasks you can perform for print servers hosted on Windows Core servers. Additionally, as with most PowerShell commands, you can invoke these commands remotely by using the `Invoke-Command` command and specifying the remote print server's name in the `-ComputerName` parameter.\n\nDon't hesitate to use the terminal to perform these tasks! It can definitely be faster, especially as you get more comfortable with the command line.\n","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["PowerShell","print servers","Windows Server Core","Terminal Tip Tuesdays"]},"/published/2023/bash_command_alternatives_in_powershell":{"title":"Bash Command Alternatives in PowerShell","content":"\nBash and PowerShell are two popular command-line shells that can help you automate tasks and manage your system. Bash is the default shell for Linux and macOS, while PowerShell is the default shell for Windows. If you are an IT professional who has some experience in using Bash, but need to administer a Windows environment, this might just be helpful to you. In this post, we'll take a look at some common Bash commands and their equivalent (more or less) commands in PowerShell.\n# General Commands\nBelow is a quick cheat sheet of common Bash commands and how to accomplish the same thing in PowerShell. Many of the commands are pre-aliased in PowerShell and will work as you'd expect, while others require use of different commands to accomplish the desired outcome.\n\n| Bash      | Bash Command works in PoSh | PowerShell Cmdlet   | PowerShell Alias | Purpose                                          | Comment                                                                                             |\n| --------- | -------------------------- | ------------------- | ---------------- | ------------------------------------------------ | --------------------------------------------------------------------------------------------------- |\n| `cat`     | No                         | `Get-Content`       | `gc`             | Read content from a file.                        |                                                                                                     |\n| `clear`   | Yes                        | `Clear-Host`        | `clear`          | Clear the terminal.                              |                                                                                                     |\n| `cp`      | Yes                        | `Copy-Item`         | `copy`           | Copy an item.                                    |                                                                                                     |\n| `curl`    | Yes                        | `Invoke-WebRequest` | `iwr`            | Request data from a URL.                         | To truly match the default `wget` behavior, you'll need to wrap the command in parenthesis then use the `.Content` dot operator, or pipe the command's output into `Select-Object Content`.                                                                                                    |\n| `diff`    | Yes                        | `Compare-Object`    | `diff`           | Compare content of two objects.                  |                                                                                                     |\n| `grep`    | No                         | `Select-String`     | `sls`            | Find a matching string.                          | To truly match the default `grep` behavior, you'll need the `-Pattern` and `-SimpleMatch` parameters. |\n| `history` | Yes                        | `Get-History`       | `h`              | Show previous commands executed at the terminal. |                                                                                                     |\n| `kill`    | Yes                        | `Stop-Process`      | `kill`           | End a process.                                   |                                                                                                     |\n| `ls`      | Yes                        | `Get-ChildItem`     | `gci`            | List items in a directory.                       |                                                                                                     |\n| `man`     | Yes                        | `Get-Help`          | `man`            | View command help file.                          |                                                                                                     |\n| `mkdir`   | Yes                        | `mkdir`             | `md`             | Create a directory.                              |                                                                                                     |\n| `mv`      | Yes                        | `Move-Item`         | `mi`             | Move an item.                                    |                                                                                                     |\n| `ps`      | Yes                        | `Get-Process`       | `ps`             | View a running process.                          |                                                                                                     |\n| `pwd`     | Yes                        | `Get-Location`      | `gl`             | Show the present working directory.              |                                                                                                     |\n| `rm`      | Yes                        | `Remove-Item`       | `rm`             | Remove an item.                                  |                                                                                                     |\n| `tail`    | No                         | `Get-Content`       | `gc`             | Read the contents of a file.                     | To truly match the default `tail` behavior, you'll need the `-Wait` parameter.                        |\n| `tee`     | Yes                        | `Tee-Object`        | `tee`            | Redirect output to two locations.                |                                                                                                     |\n| `wget`    | Yes                        | `Invoke-WebRequest` | `iwr`            | Request data from a URL.                         | To truly match the default `wget` behavior, you'll need to wrap the command in parenthesis then use the `.Content` dot operator, or pipe the command's output into `Select-Object Content`.                                                                                                     |\n\nIt's important to note that while both the PowerShell Cmdlet or Alias can be used functionally, when writing scripts, you should always use the full Cmdlet name instead of the alias.\n\n# Editing Files\nSystems Administrators and other IT professionals who have worked with Linux before will know the convenience of being able to edit a file directly in the terminal using text editors such as `vim` or `nano` or others. These two editors in particular are nice because they come pre-packaged with many Linux distributions.\n\nUnfortunately, Windows does not have such functionality in PowerShell. Luckily, we can install both Vim and Nano on Windows. While Windows does have a newly inbuilt package manager, `winget`, I still prefer `chocolatey` for its ease of use, reliability, and wide selection of available software.\n\nIf you don't have Chocolatey and want to use it to install these editors, you can install using this command as of the time of this post's writing:\n\n```PowerShell\nSet-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))\n```\n\n\u003e Note: You can check out the [Chocolatey website]([Chocolatey Software | Installing Chocolatey](https://chocolatey.org/install)) to verify if this is still the current install script.\n\nWith that installed (and after restarting your terminal), you can install both these editors:\n\n```Powershell\n# Install Nano text editor\nchoco install -y nano\n\n# Install Vim text editor\nchoco install -y vim\n```\n\nYou'll want to restart your terminal again since this will modify your profile, but after that you're all set to edit a file like you usually would in Bash:\n\n```PowerShell\nnano C:\\Path\\To\\Your\\File\n```\n\nI prefer Vim, and even once the package is installed, you'll need to use `vim` as your editor command unless you want to additionally create an alias for it:\n\n```PowerShell\nNew-Alias -Name \"vi\" -Value \"vim\"\n```\n\nNow you can use Vim to edit files in the terminal to your heart's content:\n\n```PowerShell\nvi c:\\Path\\To\\Your\\File\n```\n\n# Conclusion\nIn this post we looked at some common Bash commands and their equivalents in PowerShell, as well as how to unlock the power of in-terminal text editing in PowerShell just like we have in Bash. While administering a Windows environment can be quite different from a Linux environment, there are many niceties that you can still take advantage of to make life easier. I definitely encourage any IT professional to learn more about PowerShell and its capabilities! You can find more resources on PowerShell on the [Microsoft Learn website](https://learn.microsoft.com/en-us/search/?terms=powershell). Keep those servers humming!","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["Terminal","PowerShell","bash"]},"/published/2023/better_than_just_pinging":{"title":"Better than Just Pinging","content":"\nI'm sure we have all pinged something during troubleshooting at one point or another. But what if, in the same amount of steps as pinging, we could test *more* than just if the IP address was reachable?\n\n# PowerShell\nPowerShell has a great command built in `Test-NetConnection`. This command lets you both ping the target host, but also test if you can connect on a specific port. This is extremely helpful when troubleshooting web services or interfaces that listen on specific ports.\n\nLet's say you have some kind of interface server and you're trying to verify if it is listening properly. You could just `ping` the server, but all that tells you is that the remote host is connected to the network. It doesn't mean anything as far as that interface service goes. Say your server is \"server\" and it has an interface that listens on port 443. Instead of just pinging, you can do this:\n\n```PowerShell\nTest-NetConnection server -Port 443\n```\n\nThis will ping the server and also attempt a TCP connect on Port 443. The successful results look something like this:\n\n```output\nComputerName     : server\nRemoteAddress    : 192.168.0.1\nRemotePort       : 443\nInterfaceAlias   : Ethernet\nSourceAddress    : 192.168.0.2\nPingSucceeded    : True\nTcpTestSucceeded : True\n```\n\nIf the ping is successful but the test fails to connect on the specified port, the output looks something like this:\n\n```output\nComputerName     : server\nRemoteAddress    : 192.168.0.1\nRemotePort       : 443\nInterfaceAlias   : Ethernet\nSourceAddress    : 192.168.0.2\nPingSucceeded    : True\nTcpTestSucceeded : False\n```\n\nIf the host isn't even pingable, the output looks like this instead:\n\n```output\nComputerName           : server\nRemoteAddress          : 192.168.0.1\nRemotePort             : 443\nInterfaceAlias         : Ethernet 3\nSourceAddress          : 192.168.0.2\nPingSucceeded          : False\nPingReplyDetails (RTT) : 0 ms\nTcpTestSucceeded       : False\n```\n\nNow we know that not only is the remote server up, but we're able to connect on the port that the interface uses. That puts us one step closer to a solution, and takes no more steps than simply pinging!\n\n\u003e *Note:*\n\u003e If you want to shorten up this command, you can use it's alias! You can replace `Test-NetConnection` with simply `tnc`.\n\n# Bash\nMany Linux distributions either have `netcat` built-in, or available for installation. This tool offers at least the same functionality as the above PowerShell method. To perform the same test:\n\n```Bash\nnetcat -vz server 443\n```\n\nThis will attempt a ping and then TCP connect on Port 443 of the remote server. The output will look something like this if successful:\n\n```output\nConnection to 192.168.0.1 443 port [tcp/http] succeeded!\n```\n\nIf the host is pingable but the test failed to connect on the specified port, it will look like this:\n\n```output\nnc: connect to 192.168.200.1 port 443 (tcp) failed: Connection refused\n```\n\nIf the host isn't even pingable, then the command hangs and does not return output.\n\n\u003e *Note:*\n\u003e If you want to shorten up this command, you can use it's alias! You can replace `netcat` with simply `nc`.\n\n# Conclusion\nThe above methods aid us in gathering more information in a single step during troubleshooting, thus saving a little bit of time and moving us closer to a resolution. The next time you are about to ping something, do consider using the above methods instead!\n\n---\n# Additional Resources\n- [Test-NetConnection Documentation](https://learn.microsoft.com/en-us/powershell/module/nettcpip/test-netconnection?view=windowsserver2022-ps)\n- [About netcat](https://en.wikipedia.org/wiki/Netcat)\n","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["troubleshooting","PowerShell","bash","Terminal Tip Tuesdays"]},"/published/2023/common_helpdesk_powershell_commands":{"title":"Common Helpdesk PowerShell Commans","content":"\nHere is a small collection of PowerShell commands that might be helpful to any user administrators or helpdesk or service delivery technicians.\n\n## Computers\nThese commands are related to interacting with workstations and servers.\n\n### Get Serial Number of a Computer\n```PowerShell\n(Get-CimInstance -Class Win32_BIOS).SerialNumber\n```\n\n### Rename Computer\n```PowerShell\nRename-Computer -NewName YourNewName -Restart -Force\n```\n\n### Join Computer to Domain\n```PowerShell\nAdd-Computer -Credential (Get-Credential) -DomainName YourDomain.com -Restart -Force\n```\n\n### Restart Computer\n```PowerShell\nRestart-Computer -Force\n```\n\n### Empty Recycle Bin\n```PowerShell\nClear-RecycleBin -DriveLetter C -Force\n```\n\n### Get Computer Information\n```PowerShell\nGet-ComputerInfo\n```\n\nYou can also select specific computer information, such as uptime, by specifying that property in the `-Properties` parameter:\n\n```PowerShell\nGet-ComputerInfo -Property OsUptime\n```\n\n### Get Services\nList all services:\n```PowerShell\nGet-Service | Format-Table -AutoSize\n```\n\nGet details of a specific service:\n```PowerShell\nGet-Service -Name NameOfService | Select-Object * | Format-Table -AutoSize\n```\n\n### Group Policy Update\nForce a group policy client update (this must be run from somewhere where the Remote Server Administration Tools (RSAT) are installed):\n\n```PowerShell\nInvoke-GPUpdate -ComputerName workstation01 -Force\n```\n\nThis is the same as using `gpupdate /force` in Command Prompt.\n\nGet the resulting applied group policies of the workstation/user:\n\n```PowerShell\nGet-GPResultantSetOfPolicy -Computer workstation01 -User username -ReportType Html -Path \"C:\\temp\\gpresult.html)\"\n```\n\nThis is the same as using `gpresult /h C:\\temp\\gpresult.html` in Command Prompt.\n\n### Workstation Trust Relationships\nTo check if the workstation's trust with the domain has failed, use:\n\n```Powershell\nTest-ComputerSecureChannel\n```\n\nIf everything is okay, this should return `True`. If it returns `False`, then the workstation has lost its trust relationship with the domain. You can attempt to resolve this by using:\n\n```Powershell\nTest-ComputerSecureChannel -Repair\n```\n\nI recommend resetting the computer account in Active Directory before performing this step.\n\n### Run a Command On A Remote Computer\nAs you can imagine, it can be helpful to run a command on a remote computer, whether it is to restart that computer, get it's information, etc.\n```PowerShell\nInvoke-Command -ComputerName server01 -ScriptBlock {your_command_goes_here}\n```\n\n### Get Local Users\n```PowerShell\nGet-LocalUser\n```\n\n## Users\nThese commands are related to interacting with users.\n\n### Unlock Domain User Account\n```Powershell\nUnlock-ADAccount -Identity UserName\n```\n\n### Reset Domain User Password\n```PowerShell\nSet-ADAccountPassword UserName -NewPassword (Read-Host \"Enter the new password\" -AsSecureString) ‚ÄìReset\n```\n\n### Add Domain User to Domain Group\n```PowerShell\nAdd-ADGroupMember -Identity GroupName -Members UserName\n```\n\n## Networking\nThese commands are related to networking on a computer.\n\n### Get Network Adapters\n```PowerShell\nGet-NetAdapter | Format-Table -AutoSize\n```\n\n### Get IP Addresses\n```PowerShell\nGet-NetIPAddress | Format-Table -AutoSize\n```\n\n### Flush DNS Cache\n```PowerShell\nClear-DnsClientCache\n```\nThis is the same as doing `ipconfig /flushdns` in Command Prompt.\n\n### Use a Specific Domain Name Suffix\n```PowerShell\nSet-DnsClient -InterfaceAlias YourInterfaceAlias -ConnectionSpecificSuffix YourDomain.com\n```\n\n### Set DNS Servers\n```PowerShell\nSet-DnsClient -InterfaceIndex -ServerAddresses (\"dns1.yourdomain.com\",\"dns2.yourdomain.com\")\n```\n\nCheck out [Better than Just Pinging](published/2023/better_than_just_pinging.md) as well.\n\n## Printers\nCheck out [Administer Windows Core Print Servers](published/2023/administer_windows_core_print_servers.md), as the commands described there are relevant in general.\n\n## Clipboard Management\nFor most commands, you can take the output and copy it to your clipboard using `Set-Clipboard`. As an example, let's get the computer information and copy it:\n\n```Powershell\nGet-ComputerInfo | Out-String | Set-Clipboard\n```\n\nGet what is stored in your clipboard:\n\n```PowerShell\nGet-Clipboard\n```\n\n## Conclusion\nThere are *so* many helpful commands, as PowerShell is a powerful method of Windows administration. I hope some of these are helpful to someone! As always, you should fully understand what a command or script does before running it in your environment. Taking the time to learn how to use the terminal to administer your users and workstations will, over time, save you quite a bit of time. \n","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["PowerShell","tools","utilities","helpdesk","Terminal tip tuesdays"]},"/published/2023/configure_mssql_server_auditing":{"title":"Configure Microsoft SQL Server Auditing","content":"If you are a system administrator who works with SQL Server, you know how important it is to audit your SQL Server instances and databases. Auditing allows you to track and record the activities that occur on your SQL Server environment, such as who accessed what data, when, and how. This can help you improve the security and compliance of your data, as well as troubleshoot and investigate any issues or incidents that may happen. \n\nHowever, you also know how challenging it can be to set up and manage SQL Server auditing, especially if you have to deal with multiple servers and databases. That‚Äôs why using PowerShell scripts can be a great solution for SQL Server auditing!\n\nThis blog post includes a script from my public GitHub repository that you can use to aid in the configuration of SQL server auditing in your environment.\n\n# The Script\n```PowerShell\n\u003c#\n.SYNOPSIS\n  This script creates MSSQL server audit objects in order to write audit logs to the Windows Security Log.\n.DESCRIPTION\n  This script utilizes the SqlServer PowerShell module to pass Transact-SQL statements to the target SQL server \n  instance, which creates the following SQL server objects:\n    - Server Audit object on the master\n    - Server Audit Specification object on the master\n    - Database Audit Specification object on individual database(s)\n.PARAMETER \u003cParameter_Name\u003e\n  None\n.INPUTS\n  None\n.OUTPUTS\n  None\n.NOTES\n  Updated by:     Barker, Griffeth (barkergriffeth@gmail.com)\n  Change Date:    2023-03-28\n  Purpose/Change: Initial development\n\n  This script requires that the server have Microsoft SQL Server and the SqlServer PowerShell module installed.\n\n  This script is intended to be run via Group Policy Object against Microsoft SQL servers. \n.EXAMPLE\n  None\n#\u003e\n\n# Timestamp function for logging\nfunction Get-TimeStamp {\n  return \"{0:MM/dd/yy} {0:HH:mm:ss}\" -f (Get-Date)\n}\n\n###############################################################################################################################\n# SCRIPT SETUP                                                                                                                #\n###############################################################################################################################\n\nWrite-Host \"[$(Get-Timestamp)] Setting up...\" \nWrite-Host \"[$(Get-Timestamp)] Checking for existence of C:\\temp ...\"\n$WorkingDir = \"C:\\temp\"\nif (Test-Path -Path $WorkingDir){\nWrite-Host \"[$(Get-Timestamp)] Validated working directory.\" \n}\nelse {\nWrite-Host \"[$(Get-Timestamp)] Could not find C:\\temp - creating it now...\" \nNew-Item -Path \"C:\\\" -Name \"temp\" -ItemType \"directory\" -Force\nWrite-Host \"[$(Get-Timestamp)] Created C:\\temp - proceeding.\" \n}\n\n$FileDate = Get-Date -Format 'yyyyMMdd-HHmm'\nStart-Transcript -Path \"C:\\temp\\configure_sql_auditing_$FileDate.log\" -Force\n\n###############################################################################################################################\n# TRANSACT-SQL VIA SQLSERVER POWERSHELL MODULE                                                                                #\n###############################################################################################################################\n\n# Get a list of the databases on the server. This is used to create the Database Audit Specification on each database.\nWrite-Host \"[$(Get-Timestamp)] Getting list of databases to configure...\"\ntry {\n  $DbsToAudit = @((Get-SqlDatabase -ServerInstance $($env:COMPUTERNAME) -ErrorAction Stop | Where-Object {$_.Name -ne 'tempdb'}).Name)\n  Write-Host \"[$(Get-Timestamp)] Got list of databases.\" \n}\ncatch {\n  Write-Host \"[$(Get-Timestamp)] Failed to get list of databases! This could be due to the Powershell module not loading properly,\"\n  Write-Host \"[$(Get-Timestamp)] invalid permissions, or a variety of other reasons. The script will now exit.\"\n  Stop-Transcript\n  Exit \n}\n\n# Create the Server Audit object using Transact-SQL passed via SqlServer PowerShell Module\nWrite-Host \"[$(Get-Timestamp)] Creating the Server Audit Object [your_audit_name]...\" \ntry {\n  $SvrAuditObj = @\"\nUSE master ;\nGO\n\nCREATE SERVER AUDIT [your_audit_name]\nTO APPLICATION_LOG ;\nGO\n\nALTER SERVER AUDIT [your_audit_name]\nWITH (STATE = ON) ;\n\"@\n  Invoke-Sqlcmd -ServerInstance $($env:COMPUTERNAME) -Query $SvrAuditObj\n  Write-Host \"[$(Get-Timestamp)] Successfully created the Server Audit Object [your_audit_name].\" \n}\ncatch {\n  Write-Host \"[$(Get-Timestamp)] Failed to create the Server Audit Object [your_audit_name]!\" \n}\n\n# Create the Server Audit Specification object using Transact-SQL passed via SqlServer PowerShell Module\nWrite-Host \"[$(Get-Timestamp)] Creating the Server Audit Specification Object [your_audit_name_spec]...\" \ntry {\n  $SvrAuditSpecObj = @\"\nCREATE SERVER AUDIT SPECIFICATION [your_audit_name_spec]\nFOR SERVER AUDIT [your_audit_name]\n\tADD ( FAILED_LOGIN_GROUP ),\n\tADD ( APPLICATION_ROLE_CHANGE_PASSWORD_GROUP ),\n\tADD ( AUDIT_CHANGE_GROUP ),\n\tADD ( BACKUP_RESTORE_GROUP ),\n\tADD ( DATABASE_CHANGE_GROUP ),\n\tADD ( DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP ),\n\tADD ( DATABASE_OBJECT_PERMISSION_CHANGE_GROUP ),\n\tADD ( DATABASE_OPERATION_GROUP ),\n\tADD ( DATABASE_OWNERSHIP_CHANGE_GROUP ),\n\tADD ( DATABASE_PERMISSION_CHANGE_GROUP ),\n\tADD ( DATABASE_PRINCIPAL_CHANGE_GROUP ),\n\tADD ( DATABASE_PRINCIPAL_IMPERSONATION_GROUP ),\n\tADD ( DATABASE_ROLE_MEMBER_CHANGE_GROUP ),\n\tADD ( FAILED_DATABASE_AUTHENTICATION_GROUP ),\n\tADD ( FAILED_LOGIN_GROUP ),\n\tADD ( SCHEMA_OBJECT_CHANGE_GROUP ),\n\tADD ( SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP ),\n\tADD ( SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP ),\n\tADD ( SERVER_OBJECT_CHANGE_GROUP ),\n\tADD ( SERVER_OBJECT_OWNERSHIP_CHANGE_GROUP ),\n\tADD ( SERVER_OBJECT_PERMISSION_CHANGE_GROUP ),\n\tADD ( SERVER_OPERATION_GROUP ),\n\tADD ( SERVER_ROLE_MEMBER_CHANGE_GROUP ),\n\tADD ( SERVER_STATE_CHANGE_GROUP ),\n\tADD ( STATEMENT_ROLLBACK_GROUP ) ;\nGO\n\nALTER SERVER AUDIT SPECIFICATION [your_audit_name_spec]\nWITH (STATE = ON) ;\n\"@\n  Invoke-Sqlcmd -ServerInstance $($env:COMPUTERNAME) -Query $SvrAuditSpecObj -ErrorAction Stop\n  Write-Host \"[$(Get-Timestamp)] Successfully created the Server Audit Specification Object [your_audit_name_spec].\"\n}\ncatch {\n  Write-Host \"[$(Get-Timestamp)] Failed to create the Server Audit Specification Object [your_audit_name_spec]!\"\n}\n\n# Create the Database Audit Specification objects on each database using Transact-SQL passed via SqlServer PowerShell Module\nforeach ($DbToAudit in $DbsToAudit){\n  Write-Host \"[$(Get-Timestamp)] $DbToAudit - Creating the Database Audit Specification Object [your_audit_spec_name]...\"\n  try {\n    $DbAuditSpecObj = @\"\nUSE $DbToAudit ;\nGO\n\nCREATE DATABASE AUDIT SPECIFICATION [your_audit_spec_name]\nFOR SERVER AUDIT [your_audit_name]\nWITH (STATE = ON);\nGO\n\"@\n    Invoke-Sqlcmd -ServerInstance $($env:COMPUTERNAME) -Query $DbAuditSpecObj -ErrorAction Stop\n    Write-Host \"[$(Get-Timestamp)] $DbToAudit - Successfully created the Database Audit Specification Object [your_audit_spec_name].\"\n  }\n  catch {\n    Write-Host \"[$(Get-Timestamp)] $DbToAudit - Failed to create the Database Audit Specification Object [your_audit_spec_name]!\"\n  }\n}\n\n###############################################################################################################################\n# SCRIPT CLEANUP                                                                                                              #\n###############################################################################################################################\nStop-Transcript\n```\n\nThe `$SvrAuditObj` and `$SvrAuditSpecObj` can be customized to audit different actions on the database servers based on your environment and your needs. There is additional information on what you can audit in the **Additional Resources** section at the end of this post.\n# Get the Script\nYou can copy/paste the above script into a file and save it as a .ps1, or if you'd like you can download the script from my public GitHub repository to your user profile's Downloads folder using this command at a PowerShell terminal:\n\n```PowerShell\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/griffeth-barker/public/main/configure_mssql_server_auditing.ps1\" -OutFile \"$($env:USERPROFILE)\\Downloads\\configure_mssql_server_auditing.ps1\"\n```\n\nAs always, you should fully understand any command or script before running it in your environment. \n# Deployment\nThere are various ways this script can be utilized. The script can be loaded into Systems Center Configuration Manager (SCCM) and run against individual servers or collections of servers from there. Alternatively, the script can be copied directly to a server and run locally. You can even place the script in your domain's NETLOGON share or another location accessible by your servers and then configure a Group Policy Object to have servers call the script each time they boot.\n\nOne other great thing about configuring SQL server auditing is that the events will be written to the Windows Event Log, which can then easily be forwarded into your SIEM of choice for monitoring and alerting.\n\nAuditing your databases is an important part of your systems monitoring and security; PowerShell is a powerful scripting language that can help automate this configuration. I hope you enjoyed this blog post and gained some useful knowledge about configuring SQL server auditing using Windows PowerShell!\n\n# Additional Resources\n- [Create Server Audit \u0026 Server Audit Specification - SQL Server | Microsoft Learn](https://learn.microsoft.com/en-us/sql/relational-databases/security/auditing/create-a-server-audit-and-server-audit-specification?view=sql-server-ver16)\n- [Create a server audit \u0026 database audit specification - SQL Server | Microsoft Learn](https://learn.microsoft.com/en-us/sql/relational-databases/security/auditing/create-a-server-audit-and-database-audit-specification?view=sql-server-ver16)\n- [Get Started Querying with Transact-SQL - Training | Microsoft Learn](https://learn.microsoft.com/en-us/training/paths/get-started-querying-with-transact-sql/)","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["mssql","auditing","PowerShell","configuration","security","monitoring"]},"/published/2023/fixing_powershell_remote_console_in_devolutions_rdm":{"title":"Fixing PowerShell Remote Console in Devolutions Remote Desktop Manager","content":"\u003e **Special Thanks**\n\u003e *Special thanks to [**Marc-Andr√© Moreau**](https://forum.devolutions.net/users/25115/mamoreau), whose expertise and assistance on the Devolutions Forum led to this workaround.*\n\n\u003e **Disclaimer**\n\u003e *Please note that I am not affiliated with nor supported by Devolutions or their staff, and if you experience issues with your Remote Desktop Manager application, you should probably contact their technical support or post on their forum. I am not an RDM developer, thus the explanations contained herein are the result of my best understanding based on interactions with Devolutions staff, and are not guaranteed to be completely accurate. As always, you should consult technical support for any issues; additionally, you should fully understand fully any command or script before running them on your or any other system.*\n\n# Problem\nLaunching a Remote PowerShell Console session entry in Devolutions Remote Desktop Manager results in the following error:\n\n```output\nInvoke-Expression : Exception setting \"BufferSize\": \"Cannot set the buffer size because the size specified is too large or too small.\nParameter name: value\nActual value was 192,4000.\"\nAt line:32 char:13\n+             Invoke-Expression $SecureCommand\n+             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [Invoke-Expression], SetValueInvocationException\n    + FullyQualifiedErrorId : ExceptionWhenSetting,Microsoft.PowerShell.Commands.InvokeExpressionCommand\n```\n\n# Environment\nI identified this issue in Remote Desktop Manager version 2023.2.28.0, though Devolutions forums indicate such issues may have existed in prior versions as well. The workstations with RDM installed was Windows 11 23H2 with Windows PowerShell 5.1 as the default PowerShell environment, though the issue appears to be operating system agnostic, as well as architecture agnostic.\n\nDuring troubleshooting, I found that if I installed PowerShell 7 and set the entry's terminal type to PowerShell 7 instead of Default or Windows PowerShell 5.1 and changed the shell type from Console Host to Windows Terminal, that I was able to use the session entry as expected, though this requires the deployment of PowerShell 7 to RDM users, which may not meet the needs of all organizations and environments.\n\n# Background\nRDM's PowerShell Remote Console session type is supposed to natively handle both Windows PowerShell 5.1 and PowerShell 7.\n\nWhen RDM opens the PowerShell Remote Console session, RDM calls `conhost.exe` then resizes it using an injected command and reparents it into a docked tab within the RDM application interface. The specified PowerShell environment appears to then be opened inside of the Console Host, and then an inbuilt script is run which establishes a PSSession to the host specified in the session entry's properties.\n\nThe Console Host was not intended to be embedded into other applications. Because of this, the Console Host must be resized before reparenting it into RDM. \n\n\u003e **Note on Windows Terminal**\n\u003e Windows Terminal, the new terminal made default in Windows 11, does not support reparenting at all; if you do choose the Windows Terminal option in the session entry's properties, RDM will use a [Devolutions custom distribution of the Microsoft Windows Terminal](https://github.com/Devolutions/wt-distro), which was developed specifically to support integration with RDM via launching with a parent window, avoiding the need for reparenting after it has launched.\n\n# Cause\nThis issue results from this resizing and reparenting process. When the Console Host is resized, there are two minimums which need to be taken into account:\n- `$Host.UI.RawUI.BufferSize`\n- `$Host.UI.RawUI.WindowSize`\n\nThe Console Host's window size must be changed before the buffer size is set. The code to shrink the window *first* is not yet existent in RDM. If the Buffer size is set first and the values for this property are incompatible with the Window size, the exception shown in the Problem section of this article will be thrown.\n\n# Workaround\nThe minimum Buffer Size is determined by GetSystemMetrics(SM_CXMIN) + GetSystemMetrics(SM_CYMIN) in Windows. These values can be determined using the following code snippet:\n\n```PowerShell\nAdd-Type -TypeDefinition @\"\n    using System.Runtime.InteropServices;\n\n    public class User32 {\n        [DllImport(\"user32.dll\")]\n        public static extern int GetSystemMetrics(int nIndex);\n    }\n\"@\n\n$cxmin = [User32]::GetSystemMetrics(28) # SM_CXMIN\n$cymin = [User32]::GetSystemMetrics(29) # SM_CYMIN\nWrite-Host \"SM_CXMIN: $cxmin SM_CYMIN: $cymin\"\n```\n\nSample output:\n```output\nSM_CXMIN: 136 SM_CYMIN: 39\n```\n\nI set my PowerShell terminal's Window size and Buffer size to these values using:\n```\n$Host.UI.RawUI.WindowSize = New-Object System.Management.Automation.Host.Size 136,39\n$Host.UI.RawUI.BufferSize = New-Object System.Management.Automation.Host.Size = 136,39\n```\n\n\u003e Note that if you were to run these two commands in reverse order the first time, you'd likely have the same exception described in the Problem section of this post thrown again.\n\nIn Remote Desktop Manager, go to *File \u003e Options \u003e Types \u003e Other* and then locate the PowerShell section. I changed the Buffer size Rows to the `136` value and the Buffer size Cols to the `39` value, though the Cols value then forced itself to 50, which I left alone.\n\nIn the same section, I also changed the Window size Rows to the `136` value and the Window size Cols value to the `39`. Save these options changes.\n\nThen, for the session entry in question, navigate to *Properties \u003e General \u003e Advanced* and uncheck the **Resize window** checkbox, then save the changes.\n\nAt this point, I was be able to launch the session entry and the process described in the Background section of this post should work properly, and the end result was a PSSession to the host defined in the session entry's properties.\n\n# Additional Resources\n- This is the forum post that I revived and discussed the issue with a developer from Devolutions and eventually reached a solution, despite it being a slightly different issue: [Embedded powershell tools - potential bug found with it.. (devolutions.net)](https://forum.devolutions.net/topics/31127/embedded-powershell-tools--potential-bug-found-with-it)\n- You can find the Devolutions-developed distribution of Windows Terminal on [GitHub](https://github.com/Devolutions/wt-distro).\n- Information on the SetConsoleScreenBufferSize function in the Console API can be found on [Microsoft Learn](https://learn.microsoft.com/en-us/windows/console/setconsolescreenbuffersize).","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["break-fix","remote-desktop-manager","devolutions","PowerShell","Terminal"]},"/published/2023/get_domain_user_lockouts":{"title":"Get a List of a Domain User's Recent Lockouts","content":"\nUnlocking a domain user's account is simple enough, but what about when that user is getting locked out repeatedly? What is causing it? This is a headache that has plagued many an IT professional.\n\nThis question is simple enough to answer if you turn to the terminal. You can run the below PowerShell script to obtain a list of recent lockouts for a domain user. \n\n```PowerShell\n# Here we accept the username of the user to investigate as input\n[string]$user = Read-Host \"Username to investigate\"\n\n# Import the Active Directory module\nImport-Module ActiveDirectory\n\n# Get the domain controller that holds the PDC role\n$PDC = (Get-ADDomainController -Discover -Service PrimaryDC).HostName\n\n# Query the Security logs for 4740 events (account lockout)\n$lockouts = Get-WinEvent -ComputerName \"$PDC\" -FilterHashtable @{LogName='Security'; Id=4740} |\nWhere-Object {$_.Properties[0].Value -eq $user} |\nSelect-Object TimeCreated,\n¬† ¬† @{Name='Account Name' ; Expression={$_.Properties[0].Value}},\n¬† ¬† @{Name='Workstation'; Expression={$_.Properties[1].Value}}\n\nif ($null -eq $lockouts) {\n¬† ¬† Write-Host \"The user has no recent lockouts to display.\" -ForegroundColor Green\n}\nelse {\n¬† ¬† Write-Host \"The user has the following recent lockouts:\" -ForegroundColor Red\n¬† ¬† $lockouts\n}\n```\n\nThe output looks something like this:\n```output\nTimeCreated             Account Name      Workstations\n----------             ------------      ------------\n10/14/2023 09:20:17 AM Username          WorkstationName\n10/14/2023 08:13:05 AM Username          WorkstationName\n```\n\nThis can save a significant amount of time instead of retracing steps and pouring over event logs manually. Why do that when you can use the terminal and have it do it for you?\n\n## Get the Script\nYou can copy/paste the above script into a file and save it as a .ps1, or if you'd like you can download the script from my public GitHub repository to your user profile's Downloads folder using this command at a PowerShell terminal:\n\n```PowerShell\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/griffeth-barker/public/main/get_domain_user_lockouts.ps1\" -OutFile \"$($env:USERPROFILE)\\Downloads\\get_domain_user_loc\nkouts.ps1\"\n```\n\nAs always, you should fully understand any command or script before running it in your environment. \n\n## Additional Resources\nYou can find additional information about domain user lockouts at the links below:\n- [Windows Security Event 4740: A user account was locked out](https://learn.microsoft.com/en-us/windows/security/threat-protection/auditing/event-4740)\n- [ActiveDirectory PowerShell Module](https://learn.microsoft.com/en-us/powershell/module/activedirectory/?view=windowsserver2022-ps)\n","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["troubleshooting","PowerShell","Active Directory","Terminal Tip Tuesdays"]},"/published/2023/get_your_public_ip_address_using_terminal":{"title":"Get Your Public IP Address Using the Terminal","content":"\nWe get our private IP address using the terminal all the time. I'm sure we've all used `ipconfig /all` in Windows. It's simple and much faster than opening all the steps to open Network Connections, opening a NIC's properties, and opening the IPv4 configuration. The terminal tends to save you time as you get comfortable with it!\n\nWouldn't it be nice if you could do the same thing to get your current public IP though? \nGood news: we can!\n\nYou've probably used websites such as **WhatIsMyIPAddress** and **IPChicken** before; there are various sites out there that show you your public IP address. **ifconfig.me** is my site of choice, so I'll use it for this example. \n\nIf you were to navigate to https://ifconfig.me/ip in your web browser of choice, you would see nothing except a public IP address.\n\nWe can use several several commands to interact with this site and get our current public IP address from this URL.\n\n## PowerShell\n### Invoke-WebRequest\nThe `Invoke-WebRequest` command sends requests to a URL. It then parses (reads through) the data and returns it in collections of relevant HTML.\n\n```PowerShell\n(Invoke-WebRequest -Uri ifconfig.me/ip).Content\n```\n### Invoke-RestMethod\nSimilar to `Invoke-WebRequest`, the `Invoke-RestMethod` command sends requests to a URL, but specifically using Representational State Transfer (REST); this requires the service at the target URL to support REST, but also allows for more richly formatted data. PowerShell formats the response based to the data type. \n\n```PowerShell\nInvoke-RestMethod -Method GET -Uri ifconfig.me/ip\n```\n\n## Bash\n### curl\ncurl¬†is a tool for transferring data from or to a server using URLs. It supports these protocols: DICT, FILE, FTP, FTPS, GOPHER, GOPHERS, HTTP, HTTPS, IMAP, IMAPS, LDAP, LDAPS, MQTT, POP3, POP3S, RTMP, RTMPS, RTSP, SCP, SFTP, SMB, SMBS, SMTP, SMTPS, TELNET, TFTP, WS and WSS.\n\n```Bash\ncurl ifconfig.me/ip\n```\n\n### wget\nGNU Wget is a free utility for non-interactive download of files from the Web.  It supports HTTP, HTTPS, and FTP protocols, as well as retrieval through HTTP proxies. We can use this to get the webpage and display it in terminal instead of writing it out to a file.\n\n```Bash\nwget -qO- ifconfig.me/ip\n```\n\n# Conclusion\nRegardless of the method that you use above, if you're querying ifconfig.me/ip then the output returned to you in your terminal should look like this (though obviously the IP address would be whatever public IP address you're currently using):\n\n```output\n1.1.1.1\n```\n\nGo ahead, give it a try! This terminal tip doesn't even require elevated privileges and only takes a minute.\n\n---\n## Additional Resources\nWant to learn more about this? Here are some additional resources about what we did above!\n- [Invoke-WebRequest Documentation](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-webrequest?view=powershell-7.3)\n- [Invoke-RestMethod Documentation](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-restmethod?view=powershell-7.3)\n- [Curl Documentation](https://curl.se/docs/manpage.html)\n- [Wget Documentation](https://www.gnu.org/software/wget/manual/wget.html)\n","lastmodified":"2023-10-27T07:36:07.15641922Z","tags":["terminal","powershell","bash","terminal tip tuesdays"]},"/published/2023/my_favorite_tools_as_a_systems_administrator":{"title":"My favorite tools as a systems administrator","content":"\n# Introduction\nOver the course of the early years of my career in IT, I've found and been introduced to various tools that make my job much easier. While the majority of systems admins have heard of or already use these, I wanted to share in case there are other sysadmins in the earlier years of their careers, or old hat admins who might just not have heard of them. Because who doesn't want their life to be a bit easier?\n\n\u003e[!info] Not Affiliated\n\u003eThis post contains various links, and are *not* affiliate links. I have no relationship with these brands, and do not receive any compensation for these articles or links at the time of this post's writing.\n\n# Software\n\n## Devolutions Remote Desktop Manager\nRDM is hands down my absolute favorite piece of software. It is far and away the best remote connection manager I've ever used. It feels like it is built by systems admins, for systems admins. The list of features in this software can't even really be talked about here, because it's so extensive. At a very reasonable (frankly low) price, you can manage all of your remote connections to just about anything conveniently and securely. I won't go into tons of detail here, but please for your benefit check out the link below and get a trial or use the free version for a bit to see how it can absolutely change your IT life.\n\n[Link](https://devolutions.net/remote-desktop-manager/)\n\n## Devolutions Server\nDVLS is essentially a password manager for your remote connections. It interfaces with Remote Desktop Manager seamlessly and features Privileged Access Management to make maintaining IT security significantly easier, and enables you to empower less technical team members to resolve issues without permanently giving them additional permissions. It also has an inbuilt gateway functionality and you can use as a bastion server, which further increases security. It's a little bit involved to learn all the permissions and setup, but well worth it in the end. And the price is quite reasonable for what it is.\n\n[Link](https://devolutions.net/server/)\n\n## VSCode\nMicrosoft's Visual Studio Code is a fantastic and free tool for editing various file types that are common among systems administrators, be it PowerShell scripts, Shell scripts, XML, XAML, YAML, JSON, and more. With a ridiculously vibrant store of extensions, you can make connections to SQL servers, run queries, make API calls, manage resources in Azure, and so much more. \n\nFor basic notepad use, I of course love Notepad++, but when it comes to scripting and anything that you'll work on for more than a couple of minutes, I highly recommend VSCode.\n\n[Link](https://code.visualstudio.com/)\n\n## ObsidianMD\nObsidian is a Markdown editor that is fantastic for notetaking and organizing your knowledge. As mentioned on the home page of this blog, there's plenty to learn and plenty to forget in IT. Obsidian is great because it can be as simple or as involved as you'd like. It is very low-friction to get started. It is free, and ultimately has no lock-in since your notes are just markdown files stored in a set of directories. I use this for daily notes, writing documentation, and even writing this blog.\n\n[Link](https://obsidian.md/)\n\n## Your choice of Large Language Model (LLM)\nLarge Language Models (LLMs) and artificial intelligence (AI) in general are becoming much more prominent and readily-accessible.  There are plenty of things they are great at accomplishing, but \nthere are two reasons I recommend using one of your choice.\n\nFirstly, they're better search engines (assuming they have access to the internet, unlike OpenAI's GPT-3). You'll likely find that you get significantly better results asking ChatGPT or Bard questions, as opposed to Googling them. That said, learning how to get what you want out of these LLMs is a science, and takes a bit of learning.\n\nSecondly, they're surprisingly decent at writing you starter code. Teams I've worked with have utilized it to write out the beginnings of switch configurations, PowerShell scripts, Ansible playbooks, etc. Of course, the LLMs will get things wrong and you certainly need to go over everything they generate, but they'll get you pretty close, very quickly.\n\nThis is going to be the way of the future, so we might as well embrace it now!\n\n[OpenAI ChatGPT](https://openai.com/blog/chatgpt) | [Google Bard](https://bard.google.com/) | And others...\n\n# Hardware\n\n## StarTech USB Crash Cart Adapter\nIn my first year as a systems administrator, I spent a lot of time propping 4:3 monitors up against server racks and balancing USB keyboards on my hand while trying to type, since we didn't really have rack-mounted KVMs anymore. That got old real quick! I went searching for a solution to this problem. Enter the StarTech USB Crash Cart Adapter.\n\nThis little package connects to your laptop via USB, and then connects to the server via VGA and USB. Using the included software, you will get the server's video output in a window on your screen, and you can use your laptop to control the server. This is a lifesaver in \"break-glass\" situations where things have gone very sideways, situations where the network is unavailable, or when you need to do initial setup on a host or array where the IPMI is not connected yet.\n\nThis thing comes in around $500 USD, but sure beats doing what I was doing previously. Obviously it's slightly less valuable to those who have rack-mounted KVMs in every rack, consistently. But if you don't, this is for you!\n\n[Link](https://www.amazon.com/StarTech-com-Console-Portable-Adapter-Transfer/dp/B00IZGR6IK/ref=sr_1_4?crid=DXUA9HM1222Y\u0026keywords=startech+crash+cart+adapter\u0026qid=1687409352\u0026s=electronics\u0026sprefix=startech+crash+cart+adapt%2Celectronics%2C147\u0026sr=1-4\u0026ufe=app_do%3Aamzn1.fos.5137e923-c7be-4142-979c-7c68b6c26f63)\n\n## iodd Mini USB 3.0 256-bit Secure encrypted SSD Drive\nAt the start of my career in IT, I distinctly remember maintaining a small zipped binder of USB drives, each 16 GB, each containing the bootable installation media for various operating systems used in my environment. It worked, but it certainly was not convenient and required a lot of upkeep as new media became available.\n\nSome years ago, I picked up iodd's mini-USB SSD drive. This little device has an m.2 SSD inside, which is user-replaceable, and can hold a large quantity of ISOs and installation media. The firmware on the board allows you to mount those ISOs and present them to a physical system as a virtual CD-ROM drive. If you've worked with Dell iDrac or similar IPMI platforms and used the virtual media mapping functions in those systems, this is similar, but occurs on a physical level.\n\nIt weighs virtually nothing, slips into your pocket, and is simple to maintain. At just over $100 USD at the time of writing, I highly recommend having one of these around for desktop hardware technicians or small shops where time savings are crucial, and staffing levels are low. I especially recommend this for shops where an imaging/deployment tool is unavilable (SCCM or other PXE boot, SmartDeploy, etc.).\n\n[Link](https://www.amazon.com/256-bit-Secure-encrypted-Drive-256GB/dp/B07Y465VX1/ref=sxts_rp_s_a_1_0?content-id=amzn1.sym.3432eb1a-1558-4445-9430-9bb3e7f7b9b7%3Aamzn1.sym.3432eb1a-1558-4445-9430-9bb3e7f7b9b7\u0026crid=WP3874YV3ZNH\u0026cv_ct_cx=iodd\u0026keywords=iodd\u0026pd_rd_i=B07Y465VX1\u0026pd_rd_r=3beb27e0-ab5b-4250-bc41-92fc55d53cdf\u0026pd_rd_w=2lydt\u0026pd_rd_wg=aCQHI\u0026pf_rd_p=3432eb1a-1558-4445-9430-9bb3e7f7b9b7\u0026pf_rd_r=P4SD2MQPNHRNRB8F22EK\u0026qid=1687409113\u0026sprefix=io%2Caps%2C330\u0026sr=1-1-5985efba-8948-4f09-9122-d605505c9d1e\u0026ufe=app_do%3Aamzn1.fos.d977788f-1483-4f76-90a3-786e4cdc8f10)\n\n## NetAlly LinkSprinter\nNetAlly (also known as NetScout) makes a wide range of diagnostic network gear. I've had the pleasure of using their EtherScope nXG, their flagship product, but I'd like to instead include their LinkSprinter offering in my list of favorite hardware. \n\nThis thing is small--like fit in your pocket small. This battery-operated tool lets you plug it into a data drop or switch port, and gather facts about that connection. It will check for physical link at layer 1, see if it gets DHCP, get information about the switch its connected to, check for internet connection, etc. If there is an internet connection, the report of this information gets emailed to you. Additionally, you can connect your smartphone or other WiFi-enabled device to it's ad-hoc network to view the report via a web browser. \n\nWhile handy for a systems administrator, it is **extremely valuable** to be able to hand one to a technician and have them use it as a diagnostic tool. At around $400 USD at the time of writing, this can be such a timesaver and huge value add, especially on mid-size teams.\n\n[Link](https://www.amazon.com/NETSCOUT-LSPRNTR-300-LinkSprinter-Distance-Indication/dp/B00UD6G2OY/ref=sr_1_1?crid=2J55FNE5LR2QM\u0026keywords=linksprinter\u0026qid=1687409395\u0026s=electronics\u0026sprefix=linksprinte%2Celectronics%2C149\u0026sr=1-1-catcorr\u0026ufe=app_do%3Aamzn1.fos.5137e923-c7be-4142-979c-7c68b6c26f63)\n\n## LTT Screwdriver\nWhile a lot of people frowned on the price point of this screwdriver, and the fact that it's made by a \"YouTube company,\" I have to say it's the single best ratcheting screwdriver I've ever used. It has quickly become a preferred and essential piece of my server room toolkit.\n\nIt's bit enough that you can put some force behind it, but small enough that it isn't clunky and unwieldy. Some bit storage, magnetized tips, and a fantastic and ultra-satisfying ratcheting mechanism make this a great piece of kit.\n\n[Link](https://www.lttstore.com/products/screwdriver)\n\n## LTT Backpack\nLike the screwdriver, the backpack had some attention around it and many people voicing their concerns and outrage at the $250 USD price point. For years previously I had the [SwissGear Laptop Backpack for Tool Storage](https://www.amazon.com/SwissGear-Backpack-Storage-15-Inch-Notebook/dp/B07N141974/ref=sr_1_3?crid=2M7RU617IT0OI\u0026keywords=swiss+laptop+tool+backpack\u0026qid=1687409744\u0026sprefix=swiss+laptop+tool+backpac%2Caps%2C156\u0026sr=8-3\u0026ufe=app_do%3Aamzn1.fos.d977788f-1483-4f76-90a3-786e4cdc8f10) and mostly liked it, but had some significant gripes such as the fact that it never sat upright correctly, the pockets were a little *too* specific, and it was *not* comfortable to haul around. \n\nI decided to bite the bullet after following the creation process of the LTT Backpack, and bought one. I've now had it for about six months, and I have absolutely zero regrets. The bag is very comfortable to wear for extended periods of time, even when loaded up a bit. The quality of the materials is excellent. It has tons of storage, with a nice balance of purpose-built pockets and large cavities for bulk storage. I would not hesitate to recommend this bag to anyone.\n\n[Link](https://www.lttstore.com/products/backpack)\n\n## StarTech 1P3FPC-USB-SERIAL Adapter\nHave you ever had to fumble around with COM ports and drivers when you just need to console into a network switch? Because I have. And nearly every person I've worked with has. Don't bother!\n\nOne of my bosses recommended this to me after I'd expressed my woes of having to get my console cable to work every time I needed it. Since buying this one, I've never had a single problem. Plug it in and get configuring! It's the only adapter for console cables that I've not had issues with, and is only about $35 USD, so don't sleep on it, go for it.\n\n[Link](https://www.amazon.com/StarTech-com-Retention-Converter-Prolific-1P3FPC-USB-SERIAL/dp/B09T75BYJP/ref=sr_1_9?crid=Q2ERMEYUX48\u0026keywords=startech+usb+serial+cable\u0026qid=1687411104\u0026sprefix=startech+usb+serial+cabl%2Caps%2C163\u0026sr=8-9)\n\n# Conclusion\nThese have been just a few of my favorite tools, especially the ones that make my life as a systems administrator significantly easier. I hope some piece of the above information is helpful to you!","lastmodified":"2023-10-27T07:36:07.160419301Z","tags":["software","hardware","tools","utilities"]},"/published/2023/revolutionizing_daily_it_work_with_devolutions_remote_desktop_manager":{"title":"Revolutionizing daily IT work with Devolutions Remote Desktop Manager","content":"\n# Introduction\n\n\n# Remote Desktop Manager (RDM)\n\n## Features\n\n### feature 1\n\n\n### feature 2\n\n\n### etc\n\n## Cost\n\n\n# Implementing RDM\n\n\n# Evolving RDM\n","lastmodified":"2023-10-27T07:36:07.160419301Z","tags":["remote connections","remote desktop","secure shell","rdp","ssh"]},"/published/2023/search_log_files_using_powershell":{"title":"Search Log Files Using PowerShell","content":"You're troubleshooting an application and need to look through the logs to find out what is happening. We've all been there, right? Log files are an important resource during troubleshooting. So much so, that if you open a ticket with the software vendor, their support will likely open up their communication by requesting the log files.\n\nBy reading and searching log files, you can find clues and insights that can help you diagnose and fix the problem. However, reading and searching log files can also be a tedious and time-consuming task, especially if you have to deal with large, complex, or multiple log files. That‚Äôs why using PowerShell to read and search log files can be a helpful time saver. PowerShell is a powerful scripting language that can automate and simplify many tasks related to system administration, including working with log files. \n\nIn this blog post, we'll talk about how to use PowerShell to read and search log files during troubleshooting. \n\nWant to follow along? You can get the sample log file by using these commands:\n\n```PowerShell\n# Create a temp directory\n$WorkingDir = \"C:\\temp\"\nif (!(Test-Path -Path $WorkingDir)){\n  New-Item -Path \"C:\\\" -Name \"temp\" -ItemType \"directory\" -Force\n}\n```\n\n```PowerShell\n# Set location to the temp directory\nSet-Location -Path $WorkingDir\n```\n\n```PowerShell\n# Get the sample log file\n# LogHub on GitHub has a great sample log file that we'll use for this. Go check out their repository at https://github.com/logpai/loghub\nInvoke-WebRequest -Uri \"https://raw.githubusercontent.com/logpai/loghub/master/Windows/Windows_2k.log\" -OutFile \"$WorkingDir\\sample.log\"\n```\n\n# Reading an Entire Log File\n\n\u003e If you're following along, be sure your terminal's Present Working Directory (pwd) is `C:\\temp` and that you have the `C:\\temp\\sample.log` file in that directory.\n\nThe most basic task is getting the content of the log file. We can accomplish this simply:\n\n```PowerShell\nGet-Content sample.log\n```\n\nThe above command will read the entire log file and display its contents in your terminal window; the output would look something like this (I've truncated the output to just the first item for the sake of reducing the amount of scrolling in this blog post, as the output is hundreds of lines long):\n\n```output\n2016-09-28 04:30:30, Info                  CBS    Loaded Servicing Stack v6.1.7601.23505 with Core: C:\\Windows\\winsxs\\amd64_microsoft-windows-servicingstack_31bf3856ad364e35_6.1.7601.23505_none_681aa442f6fed7f0\\cbscore.dll\n...\n```\n\nBeing able to read the file is one thing, but it's not the *most* helpful thing in the world.\n\n# Searching a Single Log File\nWhat if we have an error and want to find out more about it? We can search the log file for the error using the `Select-String` command:\n\n```PowerShell\nSelect-String -Path .\\sample.log -Pattern \"Failed to upload all unsent reports.\" -SimpleMatch\n```\n\nThis first gets all the content of the log file, then selects any lines that have our search pattern in them. The `-SimpleMatch` switch allows for a basic search instead of the default search which uses regular expressions (regex).\n\n\u003e Note: If you want to shorten up this command, you can replace `Select-String` with its alias `sls`.\n\nNow the output looks like this:\n\n```output\n2016-09-28 04:30:31, Info                  CBS    SQM: Warning: Failed to upload all unsent reports. [HRESULT =\n0x80004005 - E_FAIL]\n2016-09-29 00:00:46, Info                  CBS    SQM: Warning: Failed to upload all unsent reports. [HRESULT =\n0x80004005 - E_FAIL]\n```\n\nNow we'd know that some unset reports failed to upload, have their timestamps, and the error code which likely denotes the reason that they failed to upload (though we'd need to consult the application vendor's documentation to verify).\n\nThis same example could be used to look for any instances of a specific error message in the log:\n\n```PowerShell\nSelect-String -Path .\\sample.log -Pattern 0x80004005 -SimpleMatch\n```\n\n\u003e Note: The `-Pattern` parameter can accept multiple items in an array as an input! You could search two errors by using `Pattern '0x800004005','0x800005007'` if you needed to.\n\nWhat if we wanted to look at the first error we returned for the Failure message and get some context? `Select-String` has a parameter `-Context` that lets us return X number of lines before the matched pattern, and Y number of lines after the matched pattern. Let's get that first instance of the error and also get the 3 lines before the error to see if something else relevant to the issue happened:\n\n```PowerShell\nSelect-String -Path .\\sample.log -Pattern \"Failed to upload all unsent reports.\" -SimpleMatch -Context 3,0 | Select-Object -First 1\n```\n\nIn the above example, `Get-Content sample.log` is reading the entire log file, and then we pipe that output into `Select-String -Pattern \"Failed to upload all unsent reports.\" -SimpleMatch -Context 3,0` where we search for the error using `-Pattern` and `-SimpleMatch`, and also ask for the 3 lines before the error with `-Context 3,0`.\n\nThe output looks like this:\n\n```output\n  2016-09-28 04:30:31, Info                  CBS    SQM: Failed to start upload with file pattern:\nC:\\Windows\\servicing\\sqm\\*_std.sqm, flags: 0x2 [HRESULT = 0x80004005 - E_FAIL]\n  2016-09-28 04:30:31, Info                  CBS    SQM: Failed to start standard sample upload. [HRESULT = 0x80004005\n- E_FAIL]\n  2016-09-28 04:30:31, Info                  CBS    SQM: Queued 0 file(s) for upload with pattern:\nC:\\Windows\\servicing\\sqm\\*_all.sqm, flags: 0x6\n\u003e 2016-09-28 04:30:31, Info                  CBS    SQM: Warning: Failed to upload all unsent reports. [HRESULT =\n0x80004005 - E_FAIL]\n```\n\nIf this were a real-world situation, those preceding lines could tell us why the error occurred.\n\n# Searching Multiple Log Files\nAlright, that's not so bad for a single log file. But what if the application has multiple log files?\nNo problem! This gets a little more involved, but still easily doable. I'll provide an example here, but there's no follow-along since we only downloaded one log file for the sample.\n\nBy inserting a `*` into the path of the log file(s), we can account for any files in the folder which have the file extension `.log`. \n\n```PowerShell\nSelect-String -Path \"C:\\temp\\*.log\" -Pattern 'Failed' -List | Select-Object -Property Filename,LineNumber,Line | Format-Table -AutoSize\n```\n\nThe output looks like this:\n\n```output\nFilename    LineNumber Line\n--------    ---------- ----\nsample.log          11 2016-09-28 04:30:31, Info                  CBS    SQM: Failed to start upload with file patte...\nsample2.log          1 0000-00-00 00:00:00,  ERROR  The task failed successfully ;-)\n```\n\n\u003e If you wanted, you could even output this into the PowerShell GridView, which will open the results in a GUI window that allows you to sort by columns and filter further. Use the same command but replace `Format-Table -AutoSize` with `Out-GridView` in that case.\n\nWith the above command, you now have results of your search from **two** log files in a single view, rather than opening both files and manually searching files.\n\n# Filtering by Date\nWhen troubleshooting, it's often helpful to narrow the scope of time involved. When you're dealing with systems that use verbose logging, there can be a lot of content to search through. The method of filtering by date can vary from situation to situation based on how the application logs its actions, but for this specific example, we'll essentially read the lines of the log and search for a partial datetime:\n\n```PowerShell\nSelect-String -Path \"C:\\temp\\*.log\" -Pattern '2016-09-28 04:' -List | Select-Object -Property Filename,LineNumber,Line | Format-Table -AutoSize\n```\n\nThe above command will return any entries in any log files in `C:\\temp` which contain occurred on September 28th, 2016 between 4:00 AM and 4:59 AM. This is an example of significantly narrowing the scope of the logs you are reviewing, and the output looks like this:\n\n```output\nFilename   LineNumber Line\n--------   ---------- ----\nsample.log          1 2016-09-28 04:30:30, Info                  CBS    Loaded Servicing Stack v6.1.7601.23505 with ...\n```\n\n\u003e Again, you could instead pipe the result into `Out-GridView` instead of `Format-Table` if you so choose.\n\n# Find Recently Written Log Files\nMany applications will truncate their log files to prevent a single log file from growing too large. You've probably seen a log file directory before that has multiple files in it like:\n- events01.log\n- events02.log\n- events03.log\n- etc...\n\nIf you want to be sure you only look at log files that have been **recently written to**, then this is how to find those:\n\n```Powershell\nGet-ChildItem -Path 'C:\\temp' | Where-Object {$_.Name -like \"*.log*\" -and $_.LastWriteTime -gt (Get-Date).AddHours(-1)}\n```\n\nThis will return you a list of files with the `.log` file extension in the `C:\\temp` directory whose `LastWriteTime` property is one hour ago or newer. You can modify as needed to narrow down the time period you want.\n\n# Watch a Log File\nAlright so you know the log file that you need to look at, but of course nobody can tell you  the last time the issue occurred. Like we often do in IT work, we can have the person experiencing the issue reproduce the issue. We'll want to be watching the log file *while*\nthis happens to be sure we see the issue get logged. There's an easy way to do this with PowerShell!\n\n```PowerShell\nGet-Content -Path 'C:\\temp\\sample.log' -Tail 5 -Wait\n```\n\nHere we are getting the last 5 lines of the log file, and waiting for new entries to appear. As they appear, they'll be displayed in the terminal.\n\n\u003e Note: If you want to shorten this command a bit, you can replace `Get-Content` with its alias: `type`.\n\n# Conclusion\nIn this post we looked at how to use PowerShell to read and search log files for troubleshooting purposes. We have seen how to read an entire log file using the¬†`Get-Content`¬†cmdlet, how to search a single log file using the¬†`Select-String`¬†cmdlet, and how to search multiple log files at once using the¬†`Get-ChildItem`¬†and¬†`Where-Object`¬†cmdlets. We have also learned how to filter log files by date using the¬†`LastWriteTime`¬†property.\n\nBy using PowerShell to work with log files, we can save time and effort, as well as perform more advanced and flexible searches. PowerShell is a powerful scripting language that can help us with many tasks related to system administration, including log file analysis and troubleshooting.\n\nI hope you enjoyed this blog post and found some bit of helpful information in it. The next time you need to review a log file (especially if its on a Windows Core server), do consider using these techniques to find the information you're looking for!\n# Additional Resources\n- [Get-Content (Microsoft.PowerShell.Management) - PowerShell | Microsoft Learn](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-content?view=powershell-7.3)\n- [Select-String (Microsoft.PowerShell.Utility) - PowerShell | Microsoft Learn](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/select-string?view=powershell-7.3)\n- [Get-ChildItem (Microsoft.PowerShell.Management) - PowerShell | Microsoft Learn](https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.management/get-childitem?view=powershell-7.3)","lastmodified":"2023-10-27T07:36:07.160419301Z","tags":["PowerShell","troubleshooting","TerminalTipTuesday","logs"]},"/published/2023/signal_what_this_app_is_and_why_we_should_use_it":{"title":"Signal - What this app is and why we should use it","content":"You may have heard of Signal, or seen the Signal icon in your phone's respective App Store. But what is it? This well-built, open-source, and peer-reviewed app for your phone and computer can send and receive text messages and multimedia messages, group texts, handle phone calls for you, and more!\n\nBut this isn't your grandma's messaging app. There is something specific about it that makes the free app worthy of mention, and recommendation:\n\n**Privacy.**\n\nAh, privacy. It used to be something we all had. However, with the rapid growth of a connected and online world, most people enjoy significantly less privacy than they previously did. Websites track you, apps send data about you to their developers, your purchase history, search history, web browsing history, and so much more is bought and sold by businesses around the world in an effort to better advertise to you -- or accomplish more nefarious objectives. And [working with tech and in IT](/_index.md), I am drawn to this type of stuff. So...Signal?\n\nSignal offers privacy that other messaging applications do not. Any phone calls or messages sent from a Signal user to another Signal user are end-to-end encrypted, making them¬†_very_¬†difficult for unwanted listeners/viewers to access. Beyond that, you can rest assured your data isn't being collected and sold to the highest bidder since the only data Signal retains about its users is:\n\n- Unix timestamps for when each account was created\n- the date that each account last connected to the Signal service\n\nYou can read more about the data they store, and also examples of data they have provided when previously subpoenaed in¬†[this article](https://www.blogger.com/blog/post/edit/8562458718891840214/4850154605545152848#).\n\n![](https://audiomgtmoregame.files.wordpress.com/2021/05/image.png?w=802)\n\nPhoto from¬†[CNBC](https://www.blogger.com/blog/post/edit/8562458718891840214/4850154605545152848#)\n\nSignal provides a variety of optional features that we've seen claim popularity on other platforms (that are¬†_definitely_¬†tracking you and selling your data) such as:\n\n- Group messaging\n- Stickers, emojis, GIFs, and other animated graphics\n- Disappearing messages\n- Typing icon/notifications and other chat-like features\n- Customizable conversations and notifications per-conversation\n- Voice and video calls -- including group video calls\n- Registering with your phone number instead of creating a complicated account\n- No cellular service required when sending between Signal users as long as you have WiFi (think like iMessage or Facebook Messenger, both of which may invade your privacy, especially given their companies' history with data and privacy issues)\n\n...and all of it can be encrypted and completely private. If all your contacts aren't on Signal yet, that's okay; it won't get in the way of communicating with them. Signal handles regular unencrypted text, multimedia, and group messages just a quickly and elegantly as Signal messages.\n\nFunded by grants and donations, open-source, peer-reviewed and audited, Signal is a best bet in maintaining your privacy while communicating.\n\nYou can get Signal for your device at these links as of date this article was published:\n\n[Android](https://www.blogger.com/blog/post/edit/8562458718891840214/4850154605545152848#)¬†|¬†[iOS](https://www.blogger.com/blog/post/edit/8562458718891840214/4850154605545152848#)¬†|¬†[Windows](https://www.blogger.com/blog/post/edit/8562458718891840214/4850154605545152848#)¬†|¬†[macOS](https://www.blogger.com/blog/post/edit/8562458718891840214/4850154605545152848#)¬†|¬†[Debian-based Linux Distributions](https://www.blogger.com/blog/post/edit/8562458718891840214/4850154605545152848#)\n\nGive it a try! Getting started and using Signal is fast, simple, and secure. A best of all, it's both¬†**private**¬†and¬†**free**. Join me on Signal today! If you're already a Signal user, or decide to try it, leave a comment below with your thoughts on the encrypted messaging service, what you like or don't like, as well as any thoughts you have on the privacy issues surrounding our online world.\n\n---\n\n_This article is not sponsored by Signal or any of their affiliates._\n\n_Featured image from¬†[dnaindia.com](https://www.blogger.com/blog/post/edit/8562458718891840214/4850154605545152848#)_.","lastmodified":"2023-10-27T07:36:07.160419301Z","tags":["software","privacy","encryption"]},"/published/2023/stepping_into_the_fediverse":{"title":"Stepping into the Fediverse","content":"\n## What is the Fediverse?\n[Wikipedia](https://en.wikipedia.org/wiki/Fediverse) explains that the term is a shorthand of \"federated\" and \"universe\", and refers to the realm of social media services based on the [ActivityPub](https://en.wikipedia.org/wiki/ActivityPub) protocol. Services in the Fediverse tend to be decentralized with multiple instances able to connect together via federation to allow users on each instance to interact with content across multiple of the instances.\n\nThere are a variety of services in the Fediverse including open-source and other alternatives to popular sites such as Facebook, Twitter, Reddit, Instagram, YouTube, etc.\n\n![fediverse-branches-axbom-30-CC-BY-SA.png](/published/media/fediverse-branches-axbom-30-CC-BY-SA.png)\n*The above image is from [axbom.com](https://axbom.com/fediverse/). Be sure to check out their site!*\n\nA quick overview of some of the analogous services:\n\n| **Typical Social Platform** | **Example of Fediverse Service** |\n| ----------------------- | ----------------------------- |\n| Facebook                | [Friendica](https://friendi.ca/)                     |\n| Twitter                 | [Mastodon](https://mastodon.social/about)                      |\n| Reddit                  | [Lemmy](https://join-lemmy.org/) or [/kbin](https://kbin.pub/en)                 |\n| Instagram               | [Pixelfed](https://pixelfed.org/)                      |\n| YouTube                 | [PeerTube](https://joinpeertube.org/en_US)                      |\n\n## How does it work?\nInstances of Fediverse services can, but are not required to, interact with each other. This allows instances to set their own rules and policies for people whose accounts live in that instance, but if federated with another instance, those users can still interact with the remote instance's content. A benefit of this is that people can choose to create their accounts in instances which best match their requirements and whatnot, and communities of like-minded people can choose to disengage from other instances if those instances are poorly moderated, maintained, etc. \n\nFor a more in depth look at how federation between instances in the Fediverse works, check out this excellent [post](https://lemmy.world/post/149743) on lemmy.world, one of many popular instances of Lemmy.\n\n## Pros and Cons\n### Pros\n- Decentralized infrastructure\n- Not commercialized, no advertising\n- Passionate, dedicated communities\n- Familiar general functionality\n- Variety of web and application clients\n### Cons\n- Slightly more friction to get started\n- Less mature than some commercial services thus fewer users\n- You friends and your grandma probably haven't heard of it\n\n## How Many People Have Joined the Fediverse?\nYou can find relatively up-to-date statistics for the major services and their many instances on the website for the [FediDB](https://fedidb.org/) project. As of February 2023, there were nearly 10 million users in the Fediverse.\n\n## Getting Started with Federated Social Media\nI recommend looking at what your objective is. For some people, it will be replacing a particular service such as Twitter or Reddit or whatnot. Look at what services are available in the Fediverse, and pick one as your replacement. As an example, you could join Mastodon instead of using Twitter. Visit the service's main website. Find an instance, and create an account. Once\n\n\u003e[!tip] Reddit Refugees  \n\u003e\n\u003eAre you a \"Reddit refugee\" looking for a new link-aggregator following Reddit's terrible handling of their API pricing changes, community support, and treatment of platform moderators? You'll specifically want [this guide](https://lemmy.world/post/895639) from [@albatross@lemmy.world](https://lemmy.world/u/albatross).\n\u003e\n\u003e Furthermore, ex-Redditors may also find these websites helpful in filling their new feeds with content:\n\u003e - [RedditMigration](https://redditmigration.com/)\n\u003e - [Sub Rehab](https://sub.rehab/)\n\n## Bringing it All Together\nThe Fediverse is a portion of the social internet that is comprised of decentralized and open-source services using the ActivityPub protocol to federate between instances of passionate communities interested in socializing and sharing from outside the influence of large corporations and \"big data\". The Fediverse has had a veritable explosion over the last couple of years between the mass exodus from Twitter a year or two back, and now the mass exodus from Reddit this year. While all your friends and family may not be in the Fediverse just yet, it doesn't mean you can't be the first. Give it a look and see if it's for you!\n\n---\n\u003e[!info] What Fediverse Services I Use and Like\n\u003e - Lemmy\n\u003e - /kbin\n\u003e - Mastodon\n\u003e - Pixelfed\n\n","lastmodified":"2023-10-27T07:36:07.160419301Z","tags":["decentralized services","social media"]},"/published/2023/using_terminal_for_basic_network_troubleshooting":{"title":"Using the Terminal for Basic Network Troubleshooting","content":"# Introduction\nNetwork troubleshooting is a necessary and valuable capability for any IT professional from helpdesk technician to veteran network engineer. In this blog post we will take a look at some basic commands you can use from your terminal (specifically in a Windows environment). This post could get a little lengthy because I'll be including examples, but stick with me and we'll come out the other side just a bit more capable! Let's dive in.\n\n# Working with MAC Addresses at the Data Link Layer\nIn the course of network troubleshooting, you will likely at some point need to investigate or find the MAC address of a device. This can be accomplished using these commands:\n\n| Command Prompt | PowerShell      |\n| -------------- | --------------- |\n| `arp`            | `Get-NetNeighbor` | \n\nThese commands display and modify entries in the Address Resolution Protocol (ARP) cache. This cache is used to store mappings between Layer 2 MAC addresses and Layer 3 IP addresses on a local area network (LAN). There are multiple ways these commands are useful. \n\n### Get a MAC address from a known IP address\n\n**Command Prompt:**\n```CMD\narp -a 172.16.30.1\n```\n\n**Output:**\n```\nInterface: 172.16.30.7 --- 0x36\n  Internet Address      Physical Address      Type\n  172.16.30.1           90-6c-ac-4b-60-56     dynamic\n```\n\n**PowerShell:**\n```PowerShell\nGet-NetNeighbor -IPAddress '172.16.30.1'\n```\n\n**Output:**\n```output\nifIndex IPAddress                                          LinkLayerAddress      State       PolicyStore\n------- ---------                                          ----------------      -----       -----------\n54      172.16.30.1                                        90-6C-AC-4B-60-56     Reachable   ActiveStore\n```\n\nThis will tell you which of your device's network interfaces can see that IP address, and what the MAC address of the remote device's network interface is.\n\n## Get an IP address from a known MAC address\n\n**Command Prompt**:\n```CMD\narp -a | findstr /i /c:\"90-6C-AC-4B-60-56\"\n```\n\n**Output**:\n```output\n  172.16.30.1           90-6c-ac-4b-60-56     dynamic\n```\n\n**PowerShell**:\n```PowerShell\nGet-NetNeighbor -LinkLayerAddress '90-6C-AC-4B-60-56'\n```\n\n**Output**:\n```output\nifIndex IPAddress                                          LinkLayerAddress      State       PolicyStore\n------- ---------                                          ----------------      -----       -----------\n54      172.16.30.1                                        90-6C-AC-4B-60-56     Reachable   ActiveStore\n```\n\nI've found this command particularly helpful in situations where I can't reach a device that I believe to be connected to the network, \n# Working with IP Addresses at the Network Layer\nNow that we know how to discover MAC addresses, which indicate a physical connection exists, let's take a look at IP addresses.\n\n## Get your private IP address\nNeed to find the IP address of your own device?\n\n| Command Prompt | PowerShell               |\n| -------------- | ------------------------ |\n| `ipconfig`     | `Get-NetIPConfiguration` |\n\nThese commands will display your device's IP configuration as set in your Network Adapter Settings.\n\n**Command Prompt:**\n```CMD\nipconfig\n```\n\n**Output:**\n```output\nEthernet adapter vEthernet (vmnet):\n\n   Connection-specific DNS Suffix  . :\n   Link-local IPv6 Address . . . . . : fe80::e0de:206d:2d3c:7a01%54\n   IPv4 Address. . . . . . . . . . . : 172.16.30.7\n   Subnet Mask . . . . . . . . . . . : 255.255.255.0\n   Default Gateway . . . . . . . . . : 172.16.30.1\n```\n\n**PowerShell:**\n```PowerShell\nGet-NetIPConfiguration\n```\n\n**Output:**\n```output\nInterfaceAlias       : vEthernet (vmnet)\nInterfaceIndex       : 54\nInterfaceDescription : Hyper-V Virtual Ethernet Adapter #2\nNetProfile.Name      : griff.systems\nIPv4Address          : 172.16.30.7\nIPv6DefaultGateway   :\nIPv4DefaultGateway   : 172.16.30.1\nDNSServer            : 172.16.30.1\n```\n\n\u003e Note that you can get even more information, including listing all of your device's interfaces and their MAC addresses, by instead using `ipconfig /all` or `Get-NetIPConfiguration -Detailed`.\n\n## Get your public IP address\nI won't go into this here, because you can instead check out [Get Your Public IP Address Using the Terminal](published/2023/get_your_public_ip_address_using_terminal.md)!\n\n## Test communication to another IP address\nAlright so we know how to find IP addresses and MAC addresses. But how do we check to see if two devices can communicate on the network?\n\n| Command Prompt | PowerShell           |\n| -------------- | -------------------- |\n| `ping`         | `Test-NetConnection` |\n\nThese commands use Internet Control Message Protocol (ICMP) to \"ping\" the remote device, and see if it gets a response. This happens by opening a RAW socket to the IP layer, where the request is packaged and sent to the remote device. IF the devices can communicate via ICMP, then you will receive an ICMP Echo Reply back, which is displayed in your terminal.\n\n**Command Prompt:**\n```CMD\nping 172.16.30.1\n```\n\n**Output:**\n```output\nPinging 172.16.30.1 with 32 bytes of data:\nReply from 172.16.30.1: bytes=32 time=7ms TTL=255\nReply from 172.16.30.1: bytes=32 time=9ms TTL=255\nReply from 172.16.30.1: bytes=32 time=8ms TTL=255\nReply from 172.16.30.1: bytes=32 time=10ms TTL=255\n\nPing statistics for 172.16.30.1:\n    Packets: Sent = 4, Received = 4, Lost = 0 (0% loss),\nApproximate round trip times in milli-seconds:\n    Minimum = 7ms, Maximum = 10ms, Average = 8ms\n```\n\n**PowerShell:**\n```PowerShell\nTest-NetConnection '172.16.30.1'\n```\n\n**Output:**\n```ouput\nComputerName           : 172.16.30.1\nRemoteAddress          : 172.16.30.1\nInterfaceAlias         : vEthernet (vmnet)\nSourceAddress          : 172.16.30.7\nPingSucceeded          : True\nPingReplyDetails (RTT) : 7 ms\n```\n\n# Working with Routing at the Network Layer\nSo we've got devices that have MAC addresses and IP addresses, but how do they get to each other for communication? This is accomplished via routes.\n\n## Get your device's IP routes\n\n**Command Prompt:**\n```CMD\nroute print\n```\n\n\u003e Note: you can accomplish this with `netstat -r` as well, which produces the same output.\n\n**Output:**\n```output\n===========================================================================\nInterface List\n 54...6c a1 00 02 f0 a5 ......Hyper-V Virtual Ethernet Adapter #2\n===========================================================================\n\nIPv4 Route Table\n===========================================================================\nActive Routes:\nNetwork Destination        Netmask          Gateway       Interface  Metric\n          0.0.0.0          0.0.0.0      172.16.30.1      172.16.30.7     25\n      172.16.30.7  255.255.255.255         On-link       172.16.30.7    281\n===========================================================================\nPersistent Routes:\n  None\n```\n\n**PowerShell:**\n```PowerShell\nGet-NetRoute\n```\n\n\u003e Note: `Get-NetRoute` output can sometimes squish the last column of the returned table, so I like to pipe the output to `Format-Table -AutoSize` to rectify this. It's not a huge deal, just a small thing.\n\n**Output:**\n```output\nifIndex DestinationPrefix             NextHop       RouteMetric ifMetric PolicyStore\n------- -----------------             -------       ----------- -------- -----------\n54      0.0.0.0/0                     172.16.30.1             0 25       ActiveStore\n54      172.16.30.7/32                0.0.0.0                 0 25       ActiveStore\n```\n\n## Trace an IP route\nWe know what our IP address is, and the IP address of our remote device, as well as the routes available to our device. But how do we check to see if that's actually the route our network traffic is taking? These commands assist with this.\n\n| Command Prompt | PowerShell           |\n| -------------- | -------------------- |\n| `tracert`         | `Test-NetConnection` |\n\nThese utilities, similar to `ping`, send out ICMP ping packets and couple the responses with the varying time-to-live (TTL) values to identify different routers long the route.\n\n**Command Prompt:**\n```CMD\ntracert 8.8.8.8\n```\n\n**Output:**\n```output\nTracing route to dns.google [8.8.8.8]\nover a maximum of 30 hops:\n\n  1    10 ms     7 ms     7 ms  172.16.30.1\n  2     9 ms     8 ms     7 ms  192.168.200.1\n  3    18 ms    16 ms    19 ms  adr01.[REDACTED].net [74.[REDACTED].37]\n  4    17 ms    14 ms    17 ms  ae2---0.[REDACTED].net [74.[REDACTED].169]\n  5    38 ms    34 ms    32 ms  ae22---0.[REDACTED].net [74.[REDACTED].157]\n  6    37 ms    39 ms    34 ms  ae1---0.[REDACTED].net [45.[REDACTED].131]\n  7    35 ms    39 ms    33 ms  74.[REDACTED].254\n  8    36 ms    38 ms    35 ms  108.[REDACTED].225\n  9    36 ms    33 ms    37 ms  142.[REDACTED].99\n 10    32 ms    32 ms    34 ms  dns.google [8.8.8.8]\n\nTrace complete.\n```\n\n**PowerShell:**\n```PowerShell\nTest-NetConnection '8.8.8.8' -TraceRoute\n```\n\n**Output:**\n```output\nComputerName           : 8.8.8.8\nRemoteAddress          : 8.8.8.8\nInterfaceAlias         : vEthernet (vmnet)\nSourceAddress          : 172.16.30.7\nPingSucceeded          : True\nPingReplyDetails (RTT) : 44 ms\nTraceRoute             : 172.16.30.1\n                         192.168.200.1\n                         74.[REDACTED].37\n                         74.[REDACTED].169\n                         74.[REDACTED].157\n                         45.[REDACTED].131\n                         74.[REDACTED].254\n                         108.[REDACTED].225\n                         142.[REDACTED].99\n                         8.8.8.8\n```\n\nThis is helpful when network communication is not working as you'd expect, or if you suspect some device along the expected path might be down. Doing a traceroute can help narrow down where the problem actually exists, and what device to troubleshoot.\n\n# Working the TCP Protocol at the Transport Layer\nMoving up a level in the OSI model, we can troubleshoot TCP connections.\n\n| Command Prompt | PowerShell           |\n| -------------- | -------------------- |\n| `netstat`         | `Get-NetTCPConnection`, `Test-NetConnection` |\n\n## Get local TCP ports\nYou can use `netstat` and `Get-NetTCPConnection` to investigate what TCP ports are connected or listening on your device or a remote device. Additionally, you can test connecting to a remote device on a specific port using `Test-NetConnection`.\n\n**Command Prompt:**\n```CMD\nnetstat -an | findstr \":PORT.*:[^:]*$\"\n```\n\n\u003e Note: `PORT` should be replaced with the local port you're interested in investigating.\n\n**Output:**\n```output\n  TCP    0.0.0.0:445            your-hostname:0       LISTENING\n```\n\n**PowerShell:**\n```PowerShell\nGet-NetTCPConnection -LocalPort 'PORT'\n```\n\n\u003e Note: Again, `PORT` should be replaced with the local port you're interested in investigating.\n\n**Output:**\n```output\nLocalAddress                        LocalPort RemoteAddress                       RemotePort State       AppliedSetting\n------------                        --------- -------------                       ---------- -----       --------------\n172.23.64.1                         139       0.0.0.0                             0          Listen\n172.18.208.1                        139       0.0.0.0                             0          Listen\n172.16.30.7                         139       0.0.0.0                             0          Listen\n```\n\nThis can be helpful if you believe that something should be communicating to or from your device. If you're having an issue, this can verify whether the transport layer is functional on your device.\n\n## Get remote TCP ports\nSimilarly, we can get the TCP port utilization for remote hosts.\n\n**Command Prompt:**\n```\nnetstat -an | findstr \":PORT[^:]*$\"\n```\n\n**Output:**\n```output\n  TCP    127.0.0.1:49671        172.16.30.1:6290         ESTABLISHED\n```\n\n**PowerShell:**\n```PowerShell\nGet-NetTCPConnection -RemotePort '443'\n```\n\n**Output:**\n```output\nLocalAddress                        LocalPort RemoteAddress                       RemotePort State       AppliedSetting\n------------                        --------- -------------                       ---------- -----       --------------\n172.16.30.7                         57268     34.111.115.192                      443        TimeWait\n```\n\nThis can be helpful if you believe that something should be communicating to or from your device. If you're having an issue, this can verify whether the transport layer is functional on your device.\n\n## Test communication to another IP address on a specific TCP port\nRather than list TCP sessions, we can actually test a connection to a remote device on a specific TCP port as well. This is one of the most helpful commands if you're troubleshooting network issues that appear to be occurring at the transport layer.\n\n**PowerShell:**\n```PowerShell\nTest-NetConnection '172.16.30.1' -Port '80'\n```\n\n**Output:**\n```output\nComputerName     : 172.16.30.1                                                          RemoteAddress    : 172.16.30.1                                                          RemotePort       : 80                                                                   InterfaceAlias   : vEthernet (vmnet)                                                    SourceAddress    : 172.16.30.7                                                          TcpTestSucceeded : True\n```\n\n## Bonus Tool: ncat\nAnother great way to test a connection on a specific port is to use `ncat`, which is a re-implementation of `netcat` which was developed for Unix systems in the late 1990s. It's packaged and provided with Nmap, which can be downloaded from their websites or installed using the Chocolatey package manager. If you have it installed, you can use it for this purpose as well:\n\n**PowerShell:**\n```PowerShell\nncat 172.16.30.1 80\n```\n\n**Output:**\n```output\nNcat: Connected to 104.117.5.18:80.\n```\n\n\u003e Note: Do remember that you should only install software in an enterprise environment where allowed/approved.\n\n# Working with Protocols at Presentation and Application Layers\nWindow provides commands for troubleshooting protocol errors at the presentation and application layers as well. For the sake of brevity, I will only cover DNS in this post. DNS is one of the most common protocols, and is important for proper network functionality. We can interact with our DNS using the terminal.\n\n## Resolve a DNS Name\n\n| Command Prompt | PowerShell           |\n| -------------- | -------------------- |\n| `nslookup`         | `Resolve-DnsName` |\n\n**Command Prompt:**\n```CMD\nnslookup google.com\n```\n\n**Output:**\n```output\nServer:  dns.google\nAddress:  8.8.8.8\n\nNon-authoritative answer:\nName:    google.com\nAddresses:  172.217.12.142\n```\n\n**PowerShell:**\n```PowerShell\nResolve-DnsName 'google.com'\n```\n\n**Output:**\n```output\nName                                           Type   TTL   Section    IPAddress\n----                                           ----   ---   -------    ---------\ngoogle.com                                     A      118   Answer     142.250.72.174\n```\n\nThese commands can be helpful when something works via IP address, but not DNS name. You can use these commands to find out what the DNS name you're using is resolving to, and you might just find that it's resolving to something other than what you'd expect.\n\n# Conclusion\nWHEW. That's a lot of information! If you stuck around until this point, I appreciate it and hope you found some useful information in this post. We've looked at how to use commands in Command Prompt (\"Command Prompt\") and Windows PowerShell to perform basic network troubleshooting at multiple layers of the OSI/TCPIP model. By mastering these commands you can save time and hassle when dealing with network problems.","lastmodified":"2023-10-27T07:36:07.160419301Z","tags":["Terminal","TerminalTipTuesday","networking","troubleshooting"]},"/toc":{"title":"Table of Contents","content":"Blog posts by topic.\n\n# Adobe\n- [Fix \"Please wait while the document is being prepared for\" message in Adobe Reader](published/2021/fix_please_wait_while_the_document_is_being_prepared_for_message_in_adobe_reader.md) \n# Ansible\n*Coming soon*\n# Devolutions\n- [Fixing PowerShell Remote Console in Devolutions Remote Desktop Manager](published/2023/fixing_powershell_remote_console_in_devolutions_rdm.md)\n# Fediverse\n- [Stepping into the Fediverse](/published/2023/stepping_into_the_fediverse)\n# Hardware\n- [Review: Samsung Galaxy Tab S6](published/2020/review_samsung_galaxy_tab_s6.md)\n# Microsoft/Windows\n- [Fix mapped drives not showing in Open and Save dialogs in Windows](/published/2021/fix_mapped_drives_not_showing_in_dialogues.md) \n# Miscellaneous\n- [My favorite tools as a systems administrator](/published/2023/my_favorite_tools_as_a_systems_administrator)\n# PowerShell\n- [Administer Windows Core Print Servers](/published/2023/administer_windows_core_print_servers.md)\n- [Bash Command Alternatives in PowerShell](published/2023/bash_command_alternatives_in_powershell.md)\n- [Better than Just Pinging](published/2023/better_than_just_pinging.md)\n- [Common Helpdesk PowerShell Commands](published/2023/common_helpdesk_powershell_commands.md)\n- [Configure Microsoft SQL Server Auditing](published/2023/configure_mssql_server_auditing.md)\n- [Get Your Public IP Address Using the Terminal](published/2023/get_your_public_ip_address_using_terminal.md)\n- [Get a List of a Domain User's Recent Lockouts](published/2023/get_domain_user_lockouts.md)\n- [Keeping software up to date using Chocolatey](/published/2020/keeping_software_up_to_date_using_chocolatey.md)\n- [Search Log Files Using PowerShell](/published/2023/search_log_files_using_powershell.md)\n- [Use PowerShell to remove a network printer for all users of a computer](/published/2020/powershell_remove_net_printer_for_all_users.md) \n- [Use PowerShell to setup a network printer for all users of a computer](/published/2020/powershell_setup_net_printer_for_all_users.md)\n- [Using the Terminal for Basic Network Troubleshooting](published/2023/using_terminal_for_basic_network_troubleshooting.md)\n# Proxmox Virtual Environment\n- [Fix 'cluster not ready - no quorum?' error in Proxmox VE](/published/2022/fix_cluster_not_ready_no_quorum_in_proxmox.md)\n- [Fix Proxmox node cannot update packages using apt-get](/published/2022/fix_proxmox_node_cannot_update_packages_via_apt-get.md)\n- [Revert node certificates to default in Proxmox VE](/published/2021/revert_node_certificates_to_default_in_proxmox_ve.md)\n- [Setup print server on Windows Server Core](/published/2022/setup_print_server_on_windows_server_core.md)\n# Software\n- [Getting organized with Notion](/published/2022/getting_organized_with_notion.md)\n- [Password managers and why you should be using one](published/2021/password_managers_and_why_you_should_be_using_one.md) \n- [Signal - What this app is and why we should use it](published/2023/signal_what_this_app_is_and_why_we_should_use_it.md) \n# Ubiquiti\n- [Install Ubiquiti UniFi controller on Debian 10 Linux](/published/2021/install_ubiquiti_unifi_controller_on_debian_10_linux.md)\n\n\n","lastmodified":"2023-10-27T07:36:07.160419301Z","tags":[]},"/toc_by_year":{"title":"Table of Contents","content":"Blog posts by year published.\n# 2023\n- [Stepping into the Fediverse](/published/2023/stepping_into_the_fediverse)\n- [My favorite tools as a systems administrator](/published/2023/my_favorite_tools_as_a_systems_administrator)\n- [Signal - What this app is and why we should use it](published/2023/signal_what_this_app_is_and_why_we_should_use_it.md) \n- [Get Your Public IP Address Using the Terminal](published/2023/get_your_public_ip_address_using_terminal.md)\n- [Better than Just Pinging](published/2023/better_than_just_pinging.md)\n- [Get a List of a Domain User's Recent Lockouts](published/2023/get_domain_user_lockouts.md)\n- [Administer Windows Core Print Servers](/published/2023/administer_windows_core_print_servers.md)\n- [Common Helpdesk PowerShell Commands](published/2023/common_helpdesk_powershell_commands.md)\n- [Configure Microsoft SQL Server Auditing](published/2023/configure_mssql_server_auditing.md)\n- [Search Log Files Using PowerShell](/published/2023/search_log_files_using_powershell.md)\n- [Bash Command Alternatives in PowerShell](published/2023/bash_command_alternatives_in_powershell.md)\n- [Using the Terminal for Basic Network Troubleshooting](published/2023/using_terminal_for_basic_network_troubleshooting.md)\n- [Fixing PowerShell Remote Console in Devolutions Remote Desktop Manager](published/2023/fixing_powershell_remote_console_in_devolutions_rdm.md)\n\n# 2022\n- [Fix 'cluster not ready - no quorum?' error in Proxmox VE](/published/2022/fix_cluster_not_ready_no_quorum_in_proxmox.md)\n- [Fix Proxmox node cannot update packages using apt-get](/published/2022/fix_proxmox_node_cannot_update_packages_via_apt-get.md)\n- [Getting organized with Notion](/published/2022/getting_organized_with_notion.md)\n- [Setup print server on Windows Server Core](/published/2022/setup_print_server_on_windows_server_core.md)\n\n# 2021\n- [Password managers and why you should be using one](published/2021/password_managers_and_why_you_should_be_using_one.md) \n- [Fix \"Please wait while the document is being prepared for\" message in Adobe Reader](published/2021/fix_please_wait_while_the_document_is_being_prepared_for_message_in_adobe_reader.md) \n- [Fix mapped drives not showing in Open and Save dialogs in Windows](/published/2021/fix_mapped_drives_not_showing_in_dialogues.md) \n- [Revert node certificates to default in Proxmox VE](/published/2021/revert_node_certificates_to_default_in_proxmox_ve.md)\n- [Install Ubiquiti UniFi controller on Debian 10 Linux](/published/2021/install_ubiquiti_unifi_controller_on_debian_10_linux.md)\n\n# 2020\n- [Review: Samsung Galaxy Tab S6](published/2020/review_samsung_galaxy_tab_s6.md)\n- [Use PowerShell to remove a network printer for all users of a computer](/published/2020/powershell_remove_net_printer_for_all_users.md) \n- [Keeping software up to date using Chocolatey](/published/2020/keeping_software_up_to_date_using_chocolatey.md)\n- [Use PowerShell to setup a network printer for all users of a computer](/published/2020/powershell_setup_net_printer_for_all_users.md)\n","lastmodified":"2023-10-27T07:36:07.160419301Z","tags":[]}}